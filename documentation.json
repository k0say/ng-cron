{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "CronHostComponent",
            "id": "directive-CronHostComponent-48b74f940e07d70303fdfa8de7c0672cfa9512c9bad2de2ae5f6608a88c0ed2ac84ed1f082e76f000569e3cd302e0ca0565338372bb5c5258a9d0069039c65e8",
            "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Type, CronUnixUIService, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronLocalization, localization, DeepPartial } from './cron-localization';\r\nimport { CronClassesSchema, generateSchema } from './styles';\r\n\r\ntype RawObject = DeepPartial<{\r\n\t[key: string]: string|RawObject;\r\n}>;\r\n\r\n@Directive()\r\nexport abstract class CronHostComponent implements ControlValueAccessor, OnChanges {\r\n  @Output() readonly changed = new EventEmitter<string>();\r\n  @Output() readonly tabChanged = new EventEmitter<Type>();\r\n  @Input() cssClassPrefix = '';\r\n  @Input() activeTab: Type = this.getActiveTab();\r\n  @Input() tabs: Type[]|null = null;\r\n  @Input() hideTabs = false;\r\n  @Input() localization?: CronLocalization;\r\n  @Input() set disabled(value: string|null|boolean) {\r\n    const disableFields = value != null && `${value}` !== 'false';\r\n    this.cronUI.setDisabled(disableFields);\r\n  }\r\n\r\n  protected onChange: ((cronValue: string) => {})|null = null;\r\n  protected onTouched: (() => {})|null = null;\r\n  readonly type = Type;\r\n  schema: CronClassesSchema;\r\n\r\n  constructor(\r\n    private readonly cd: ChangeDetectorRef,\r\n    private readonly cronUI: CronUnixUIService|CronQuartzUIService,\r\n    private readonly initialTabs: Type[],\r\n    private readonly styles: CronClassesSchema\r\n  ) {\r\n    this.schema = generateSchema(styles, this.cssClassPrefix);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const cssClassPrefix = changes['cssClassPrefix'];\r\n    const shouldUpdate = (\r\n      cssClassPrefix && cssClassPrefix.currentValue !== cssClassPrefix.previousValue\r\n    );\r\n    if (shouldUpdate) {\r\n      this.schema = generateSchema(this.styles, this.cssClassPrefix);\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n\r\n  writeValue(cronValue: string) {\r\n    this.cronUI.fillFromExpression(cronValue || '');\r\n  }\r\n\r\n  registerOnChange(fn: (cronValue: string) => {}) {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  applyChanges() {\r\n    const str = this.cronUI.toString();\r\n    if (this.onChange) {\r\n      this.onChange(str);\r\n    }\r\n    if (this.onTouched) {\r\n      this.onTouched();\r\n    }\r\n    this.changed.emit(str);\r\n  }\r\n\r\n  getActiveTab() {\r\n    const tabs = this.getTabs();\r\n    const [firstTab] = tabs.length ? tabs : [this.initialTabs[0]];\r\n    return this.activeTab || firstTab;\r\n  }\r\n\r\n  getTabs() {\r\n    return this.tabs || this.initialTabs;\r\n  }\r\n\r\n  getLocalization() {\r\n    const args: RawObject[] = [localization];\r\n    if (this.localization) {\r\n      args.push(this.localization);\r\n    }\r\n    return this.mergeDeep<typeof localization>(...args);\r\n  }\r\n\r\n  private mergeDeep<T extends RawObject>(...objects: RawObject[]) {\r\n    return objects.reduce((prev, obj) => {\r\n      Object.keys(obj).forEach(key => {\r\n        const pVal = prev[key];\r\n        const oVal = obj[key];\r\n\r\n        if (pVal && typeof pVal === 'object' && oVal && typeof oVal === 'object') {\r\n          prev[key] = this.mergeDeep(pVal, oVal);\r\n        } else {\r\n          prev[key] = oVal;\r\n        }\r\n      });\r\n\r\n      return prev;\r\n    }, {}) as T;\r\n  }\r\n}\r\n",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Type[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "ControlValueAccessor",
                "OnChanges"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService | CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "initialTabs",
                        "type": "Type[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "styles",
                        "type": "CronClassesSchema",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService | CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialTabs",
                        "type": "Type[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "styles",
                        "type": "CronClassesSchema",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "disabled": {
                    "name": "disabled",
                    "setSignature": {
                        "name": "disabled",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "string | null | boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 21,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "string | null | boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "CronTabComponent",
            "id": "directive-CronTabComponent-7b1932465c0ac9cfad76237df78644377c933c775b08476eeebe4f1325de36f1a55e4822430134d4cc660db012e4189eeb1cb836c8a943881c178407054782b5",
            "file": "projects/ng-cron/src/lib/cron-tab.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, ChangeDetectorRef, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\nimport { Mode, Segment, CronUnixUIService, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './styles';\r\nimport { FullCronLocalization } from './cron-localization';\r\n\r\n@Directive()\r\nexport abstract class CronTabComponent implements OnInit, OnDestroy {\r\n  @Output() readonly changed = new EventEmitter<never>();\r\n  @Input() localization!: FullCronLocalization;\r\n  @Input() schema!: CronClassesSchema;\r\n\r\n  private readonly sessionId = Date.now().toString();\r\n  private unListener: (() => void)|null = null;\r\n  protected abstract readonly segments: Segment[];\r\n  protected abstract readonly cd: ChangeDetectorRef;\r\n\r\n  abstract readonly cronUI: CronUnixUIService|CronQuartzUIService;\r\n  readonly mode = Mode;\r\n\r\n  ngOnInit() {\r\n    this.unListener = this.cronUI.listen(this.segments, () => {\r\n      this.cd.detectChanges();\r\n      this.applyChanges();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.unListener) {\r\n      this.unListener();\r\n    }\r\n  }\r\n\r\n  genId(mode: Mode, extra?: string) {\r\n    return `${mode}-${extra || ''}${this.sessionId}`;\r\n  }\r\n\r\n  localizeList(list: { value: string, label: string }[], localizationStore: { [key: string]: string }) {\r\n    return list.map(v => ({\r\n      ...v,\r\n      label: this.localizeLabel(v.label, localizationStore)\r\n    }));\r\n  }\r\n\r\n  localizeLabel(label: string, localizationStore: { [key: string]: string }) {\r\n    return localizationStore[label.toLowerCase()]\r\n  }\r\n\r\n  protected applyChanges() {\r\n    this.changed.emit();\r\n  }\r\n}\r\n",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ]
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ]
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ]
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "CronTabSingleSegmentComponent",
            "id": "directive-CronTabSingleSegmentComponent-da2e69149652b32770cd592f23a0d06ca46d12eba76f95fa305b1c94fb2448e9d66de7fef01611beb197f7273969c5759bfa1533aae1065dc66907d4bb1ec1c5",
            "file": "projects/ng-cron/src/lib/cron-tab-single-segment.abstract.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ViewChild } from '@angular/core';\r\nimport { Segment, Type } from '@sbzen/cron-core';\r\n\r\nimport { CronAndComponent } from './shared';\r\nimport { CronTabComponent } from './cron-tab.abstract';\r\nimport { CronSingleType } from './cron-single-tab.type';\r\n\r\n@Directive()\r\nexport abstract class CronTabSingleSegmentComponent extends CronTabComponent {\r\n  @ViewChild(CronAndComponent, { static: true }) and: CronAndComponent|null = null;\r\n  readonly segments: Segment[];\r\n\r\n  constructor(tab: CronSingleType) {\r\n    super();\r\n    this.segments = this.getSegments(tab);\r\n  }\r\n\r\n  protected override applyChanges() {\r\n    if (this.and) {\r\n      this.and.detectChanges();\r\n    }\r\n    super.applyChanges();\r\n  }\r\n\r\n  private getSegments(tab: CronSingleType) {\r\n    const segment = new Map<CronSingleType, Segment>([\r\n      [Type.HOURS, Segment.hours],\r\n      [Type.MINUTES, Segment.minutes],\r\n      [Type.MONTH, Segment.month],\r\n      [Type.SECONDS, Segment.seconds],\r\n      [Type.YEAR, Segment.year]\r\n    ]).get(tab);\r\n\r\n    if (!segment) {\r\n      throw `No segments for tab: ${tab}`;\r\n    }\r\n\r\n    return [segment];\r\n  }\r\n}\r\n",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "extends": [
                "CronTabComponent"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tab",
                        "type": "CronSingleType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "tab",
                        "type": "CronSingleType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "Bs4QuartzCronComponent",
            "id": "component-Bs4QuartzCronComponent-747b8c11577fd27256cf666dc5a7b96c413d18cf93ccdecef93e9c11d49451e221c80302fe8c163c1bb72691bd9a1afd559be66a1250ba47e91ad98bfa6dffaf",
            "file": "stories/bs4-quartz-cron.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-bs4-quartz-cron",
            "styleUrls": [
                "../node_modules/bootstrap-legacy/scss/bootstrap.scss"
            ],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<quartz-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</quartz-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\r\n\r\n@Component({\r\n  selector: 'storybook-bs4-quartz-cron',\r\n  styleUrls: ['../node_modules/bootstrap-legacy/scss/bootstrap.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <input\r\n      class=\"form-control mb-2\"\r\n      readonly\r\n      [value]=\"value\">\r\n\r\n    <quartz-cron\r\n      name=\"cron\"\r\n      [cssClassPrefix]=\"cssClassPrefix\"\r\n      [activeTab]=\"activeTab\"\r\n      [tabs]=\"tabs\"\r\n      [hideTabs]=\"hideTabs\"\r\n      [localization]=\"localization\"\r\n      [disabled]=\"disabled\"\r\n      [(ngModel)]=\"value\"\r\n      (changed)=\"changed.emit($event)\"\r\n      (tabChanged)=\"tabChanged.emit($event)\">\r\n    </quartz-cron>\r\n  `,\r\n})\r\nexport class Bs4QuartzCronComponent {\r\n  @Output() readonly changed = new EventEmitter<string>();\r\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\r\n  @Input() cssClassPrefix?: string;\r\n  @Input() activeTab?: Tab;\r\n  @Input() tabs?: Tab[];\r\n  @Input() hideTabs?: boolean;\r\n  @Input() localization?: CronLocalization;\r\n  @Input() value = '';\r\n  @Input() disabled?: string|null|boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*!\n * Bootstrap v4.6.2 (https://getbootstrap.com/)\n * Copyright 2011-2022 The Bootstrap Authors\n * Copyright 2011-2022 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n */\n\n@import \"functions\";\n@import \"variables\";\n@import \"mixins\";\n@import \"root\";\n@import \"reboot\";\n@import \"type\";\n@import \"images\";\n@import \"code\";\n@import \"grid\";\n@import \"tables\";\n@import \"forms\";\n@import \"buttons\";\n@import \"transitions\";\n@import \"dropdown\";\n@import \"button-group\";\n@import \"input-group\";\n@import \"custom-forms\";\n@import \"nav\";\n@import \"navbar\";\n@import \"card\";\n@import \"breadcrumb\";\n@import \"pagination\";\n@import \"badge\";\n@import \"jumbotron\";\n@import \"alert\";\n@import \"progress\";\n@import \"media\";\n@import \"list-group\";\n@import \"close\";\n@import \"toasts\";\n@import \"modal\";\n@import \"tooltip\";\n@import \"popover\";\n@import \"carousel\";\n@import \"spinners\";\n@import \"utilities\";\n@import \"print\";\n",
                    "styleUrl": "../node_modules/bootstrap-legacy/scss/bootstrap.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "Bs4UnixCronComponent",
            "id": "component-Bs4UnixCronComponent-707ee4def9e3fed3de56c66bdec947f0d7fa4e76b0d357db8c608d1004ef0022b1ef9dfe539e88a7e41e66ee921b913cdc4c7134cf9c7e25da3ab8797709acf7",
            "file": "stories/bs4-unix-cron.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-bs4-unix-cron",
            "styleUrls": [
                "../node_modules/bootstrap-legacy/scss/bootstrap.scss"
            ],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<unix-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</unix-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\r\n\r\n@Component({\r\n  selector: 'storybook-bs4-unix-cron',\r\n  styleUrls: ['../node_modules/bootstrap-legacy/scss/bootstrap.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <input\r\n      class=\"form-control mb-2\"\r\n      readonly\r\n      [value]=\"value\">\r\n\r\n    <unix-cron\r\n      name=\"cron\"\r\n      [cssClassPrefix]=\"cssClassPrefix\"\r\n      [activeTab]=\"activeTab\"\r\n      [tabs]=\"tabs\"\r\n      [hideTabs]=\"hideTabs\"\r\n      [localization]=\"localization\"\r\n      [disabled]=\"disabled\"\r\n      [(ngModel)]=\"value\"\r\n      (changed)=\"changed.emit($event)\"\r\n      (tabChanged)=\"tabChanged.emit($event)\">\r\n    </unix-cron>\r\n  `,\r\n})\r\nexport class Bs4UnixCronComponent {\r\n  @Output() readonly changed = new EventEmitter<string>();\r\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\r\n  @Input() cssClassPrefix?: string;\r\n  @Input() activeTab?: Tab;\r\n  @Input() tabs?: Tab[];\r\n  @Input() hideTabs?: boolean;\r\n  @Input() localization?: CronLocalization;\r\n  @Input() value = '';\r\n  @Input() disabled?: string|null|boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/*!\n * Bootstrap v4.6.2 (https://getbootstrap.com/)\n * Copyright 2011-2022 The Bootstrap Authors\n * Copyright 2011-2022 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n */\n\n@import \"functions\";\n@import \"variables\";\n@import \"mixins\";\n@import \"root\";\n@import \"reboot\";\n@import \"type\";\n@import \"images\";\n@import \"code\";\n@import \"grid\";\n@import \"tables\";\n@import \"forms\";\n@import \"buttons\";\n@import \"transitions\";\n@import \"dropdown\";\n@import \"button-group\";\n@import \"input-group\";\n@import \"custom-forms\";\n@import \"nav\";\n@import \"navbar\";\n@import \"card\";\n@import \"breadcrumb\";\n@import \"pagination\";\n@import \"badge\";\n@import \"jumbotron\";\n@import \"alert\";\n@import \"progress\";\n@import \"media\";\n@import \"list-group\";\n@import \"close\";\n@import \"toasts\";\n@import \"modal\";\n@import \"tooltip\";\n@import \"popover\";\n@import \"carousel\";\n@import \"spinners\";\n@import \"utilities\";\n@import \"print\";\n",
                    "styleUrl": "../node_modules/bootstrap-legacy/scss/bootstrap.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "Bs5QuartzCronComponent",
            "id": "component-Bs5QuartzCronComponent-d49fa6f1ca1995e2ea9d4a58c6e64767b116d52b85620ac47c54b6bf042030190dfc0339cf180343b0750d88ef87e91d8ef6547ce2529dde38084ede03111da0",
            "file": "stories/bs5-quartz-cron.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-bs5-quartz-cron",
            "styleUrls": [
                "../node_modules/bootstrap/scss/bootstrap.scss"
            ],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<bs5-quartz-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</bs5-quartz-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\r\n\r\n@Component({\r\n  selector: 'storybook-bs5-quartz-cron',\r\n  styleUrls: ['../node_modules/bootstrap/scss/bootstrap.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <input\r\n      class=\"form-control mb-2\"\r\n      readonly\r\n      [value]=\"value\">\r\n\r\n    <bs5-quartz-cron\r\n      name=\"cron\"\r\n      [cssClassPrefix]=\"cssClassPrefix\"\r\n      [activeTab]=\"activeTab\"\r\n      [tabs]=\"tabs\"\r\n      [hideTabs]=\"hideTabs\"\r\n      [localization]=\"localization\"\r\n      [disabled]=\"disabled\"\r\n      [(ngModel)]=\"value\"\r\n      (changed)=\"changed.emit($event)\"\r\n      (tabChanged)=\"tabChanged.emit($event)\">\r\n    </bs5-quartz-cron>\r\n  `,\r\n})\r\nexport class Bs5QuartzCronComponent {\r\n  @Output() readonly changed = new EventEmitter<string>();\r\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\r\n  @Input() cssClassPrefix?: string;\r\n  @Input() activeTab?: Tab;\r\n  @Input() tabs?: Tab[];\r\n  @Input() hideTabs?: boolean;\r\n  @Input() localization?: CronLocalization;\r\n  @Input() value = '';\r\n  @Input() disabled?: string|null|boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"mixins/banner\";\n@include bsBanner(\"\");\n\n\n// scss-docs-start import-stack\n// Configuration\n@import \"functions\";\n@import \"variables\";\n@import \"variables-dark\";\n@import \"maps\";\n@import \"mixins\";\n@import \"utilities\";\n\n// Layout & components\n@import \"root\";\n@import \"reboot\";\n@import \"type\";\n@import \"images\";\n@import \"containers\";\n@import \"grid\";\n@import \"tables\";\n@import \"forms\";\n@import \"buttons\";\n@import \"transitions\";\n@import \"dropdown\";\n@import \"button-group\";\n@import \"nav\";\n@import \"navbar\";\n@import \"card\";\n@import \"accordion\";\n@import \"breadcrumb\";\n@import \"pagination\";\n@import \"badge\";\n@import \"alert\";\n@import \"progress\";\n@import \"list-group\";\n@import \"close\";\n@import \"toasts\";\n@import \"modal\";\n@import \"tooltip\";\n@import \"popover\";\n@import \"carousel\";\n@import \"spinners\";\n@import \"offcanvas\";\n@import \"placeholders\";\n\n// Helpers\n@import \"helpers\";\n\n// Utilities\n@import \"utilities/api\";\n// scss-docs-end import-stack\n",
                    "styleUrl": "../node_modules/bootstrap/scss/bootstrap.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "Bs5QuartzCronComponent",
            "id": "component-Bs5QuartzCronComponent-49c0c9906c09d90c3ce47182187c5395a380d9a9ef7d8d05cd0edec7fdc66a082a5e820ea9af0908b5727f29226b9f3aa2dac8cad495cf4d5c6fd7b812881ebb-1",
            "file": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronQuartzUIService, useFactory: bs5QuartzCronServiceFactory\n}",
                    "type": "injectable"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => Bs5QuartzCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "bs5-quartz-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./../quartz/quartz.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Type, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronHostComponent } from './../cron-host.abstract';\r\nimport { cronBootstrap5 } from './../styles';\r\n\r\nexport function bs5QuartzCronServiceFactory() {\r\n  return new CronQuartzUIService();\r\n};\r\n\r\n@Component({\r\n  selector: 'bs5-quartz-cron',\r\n  templateUrl: './../quartz/quartz.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: CronQuartzUIService,\r\n      useFactory: bs5QuartzCronServiceFactory\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => Bs5QuartzCronComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class Bs5QuartzCronComponent extends CronHostComponent {\r\n  constructor(\r\n    cd: ChangeDetectorRef,\r\n    cronQuartzUI: CronQuartzUIService\r\n  ) {\r\n    super(\r\n      cd,\r\n      cronQuartzUI,\r\n      [\r\n        Type.SECONDS,\r\n        Type.MINUTES,\r\n        Type.HOURS,\r\n        Type.DAY,\r\n        Type.MONTH,\r\n        Type.YEAR\r\n      ],\r\n      cronBootstrap5\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronHostComponent"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Bs5QuartzCronComponent-1",
            "templateData": "<cron-container\r\n  hostClass=\"c-quartz\"\r\n  [localization]=\"getLocalization()\"\r\n  [tabs]=\"getTabs()\"\r\n  [activeTab]=\"getActiveTab()\"\r\n  [hideTabs]=\"hideTabs\"\r\n  [schema]=\"schema\"\r\n  (tabChanged)=\"tabChanged.emit($event)\">\r\n\r\n  <ng-template\r\n    #content\r\n    let-activeTab>\r\n\r\n    @if (activeTab === type.MONTH) {\r\n      <quartz-cron-month\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-month>\r\n    } @else if (activeTab === type.MINUTES) {\r\n      <quartz-cron-minute\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-minute>\r\n    } @else if (activeTab === type.HOURS) {\r\n      <quartz-cron-hour\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-hour>\r\n    } @else if (activeTab === type.SECONDS) {\r\n      <quartz-cron-second\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-second>\r\n    } @else if (activeTab === type.YEAR) {\r\n      <quartz-cron-year\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-year>\r\n    } @else if (activeTab === type.DAY) {\r\n      <quartz-cron-day\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-day>\r\n    }\r\n  </ng-template>\r\n</cron-container>\r\n"
        },
        {
            "name": "Bs5UnixCronComponent",
            "id": "component-Bs5UnixCronComponent-1cf5e65fd66c3cfa8a9a924cafb3ed6f8d3ca7e8866ed33805624f9cbd091874a5af957337a41d9faf9821366404a1a62860e51185b3338502f56500570beb29",
            "file": "stories/bs5-unix-cron.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-bs5-unix-cron",
            "styleUrls": [
                "../node_modules/bootstrap/scss/bootstrap.scss"
            ],
            "styles": [],
            "template": "<input\n  class=\"form-control mb-2\"\n  readonly\n  [value]=\"value\">\n\n<bs5-unix-cron\n  name=\"cron\"\n  [cssClassPrefix]=\"cssClassPrefix\"\n  [activeTab]=\"activeTab\"\n  [tabs]=\"tabs\"\n  [hideTabs]=\"hideTabs\"\n  [localization]=\"localization\"\n  [disabled]=\"disabled\"\n  [(ngModel)]=\"value\"\n  (changed)=\"changed.emit($event)\"\n  (tabChanged)=\"tabChanged.emit($event)\">\n</bs5-unix-cron>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Tab",
                    "decorators": []
                },
                {
                    "name": "cssClassPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string | null | boolean",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "CronLocalization",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Tab[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Tab>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Tab, CronLocalization } from './../projects/ng-cron/src/public-api';\r\n\r\n@Component({\r\n  selector: 'storybook-bs5-unix-cron',\r\n  styleUrls: ['../node_modules/bootstrap/scss/bootstrap.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <input\r\n      class=\"form-control mb-2\"\r\n      readonly\r\n      [value]=\"value\">\r\n\r\n    <bs5-unix-cron\r\n      name=\"cron\"\r\n      [cssClassPrefix]=\"cssClassPrefix\"\r\n      [activeTab]=\"activeTab\"\r\n      [tabs]=\"tabs\"\r\n      [hideTabs]=\"hideTabs\"\r\n      [localization]=\"localization\"\r\n      [disabled]=\"disabled\"\r\n      [(ngModel)]=\"value\"\r\n      (changed)=\"changed.emit($event)\"\r\n      (tabChanged)=\"tabChanged.emit($event)\">\r\n    </bs5-unix-cron>\r\n  `,\r\n})\r\nexport class Bs5UnixCronComponent {\r\n  @Output() readonly changed = new EventEmitter<string>();\r\n  @Output() readonly tabChanged = new EventEmitter<Tab>();\r\n  @Input() cssClassPrefix?: string;\r\n  @Input() activeTab?: Tab;\r\n  @Input() tabs?: Tab[];\r\n  @Input() hideTabs?: boolean;\r\n  @Input() localization?: CronLocalization;\r\n  @Input() value = '';\r\n  @Input() disabled?: string|null|boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"mixins/banner\";\n@include bsBanner(\"\");\n\n\n// scss-docs-start import-stack\n// Configuration\n@import \"functions\";\n@import \"variables\";\n@import \"variables-dark\";\n@import \"maps\";\n@import \"mixins\";\n@import \"utilities\";\n\n// Layout & components\n@import \"root\";\n@import \"reboot\";\n@import \"type\";\n@import \"images\";\n@import \"containers\";\n@import \"grid\";\n@import \"tables\";\n@import \"forms\";\n@import \"buttons\";\n@import \"transitions\";\n@import \"dropdown\";\n@import \"button-group\";\n@import \"nav\";\n@import \"navbar\";\n@import \"card\";\n@import \"accordion\";\n@import \"breadcrumb\";\n@import \"pagination\";\n@import \"badge\";\n@import \"alert\";\n@import \"progress\";\n@import \"list-group\";\n@import \"close\";\n@import \"toasts\";\n@import \"modal\";\n@import \"tooltip\";\n@import \"popover\";\n@import \"carousel\";\n@import \"spinners\";\n@import \"offcanvas\";\n@import \"placeholders\";\n\n// Helpers\n@import \"helpers\";\n\n// Utilities\n@import \"utilities/api\";\n// scss-docs-end import-stack\n",
                    "styleUrl": "../node_modules/bootstrap/scss/bootstrap.scss"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "Bs5UnixCronComponent",
            "id": "component-Bs5UnixCronComponent-e76f5de01f3a7bfb93e5ff91567d672e63c98f8c0f69bde710053dbf84076440ea18f0631ad1477503cf48252692426c28431ad172fa70981d0f9c9f159c0cf5-1",
            "file": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronUnixUIService, useFactory: bs5UnixCronServiceFactory\n}",
                    "type": "injectable"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => Bs5UnixCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "bs5-unix-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./../unix/unix.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Type, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronHostComponent } from './../cron-host.abstract';\r\nimport { cronBootstrap5 } from './../styles';\r\n\r\nexport function bs5UnixCronServiceFactory() {\r\n  return new CronUnixUIService()\r\n};\r\n\r\n@Component({\r\n  selector: 'bs5-unix-cron',\r\n  templateUrl: './../unix/unix.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: CronUnixUIService,\r\n      useFactory: bs5UnixCronServiceFactory\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => Bs5UnixCronComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class Bs5UnixCronComponent extends CronHostComponent {\r\n  constructor(\r\n    cd: ChangeDetectorRef,\r\n    cronUnixUI: CronUnixUIService\r\n  ) {\r\n    super(\r\n      cd,\r\n      cronUnixUI,\r\n      [Type.MINUTES, Type.HOURS, Type.DAY, Type.MONTH],\r\n      cronBootstrap5\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronHostComponent"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Bs5UnixCronComponent-1",
            "templateData": "<cron-container\r\n  hostClass=\"c-unix\"\r\n  [localization]=\"getLocalization()\"\r\n  [tabs]=\"getTabs()\"\r\n  [activeTab]=\"getActiveTab()\"\r\n  [hideTabs]=\"hideTabs\"\r\n  [schema]=\"schema\"\r\n  (tabChanged)=\"tabChanged.emit($event)\">\r\n\r\n  <ng-template\r\n    #content\r\n    let-activeTab>\r\n\r\n    @if (activeTab === type.MONTH) {\r\n      <unix-cron-month\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-month>\r\n    } @else if (activeTab === type.MINUTES) {\r\n      <unix-cron-minute\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-minute>\r\n    } @else if (activeTab === type.HOURS) {\r\n      <unix-cron-hour\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-hour>\r\n    } @else if (activeTab === type.DAY) {\r\n      <unix-cron-day\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-day>\r\n    }\r\n  </ng-template>\r\n</cron-container>\r\n"
        },
        {
            "name": "CronAndComponent",
            "id": "component-CronAndComponent-86e7f3d23ac1c425728e575fd257ead4f561fbbd437c1e3561d6b41122cee5b00434977f9e0b718197f0c53272d6646ae88952e3d83519ee85597deef436448b",
            "file": "projects/ng-cron/src/lib/shared/and/and.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-and",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./and.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "gridSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isValueSelected",
                    "defaultValue": "() => false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectValue",
                    "defaultValue": "() => false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "function",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.AND",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detectChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Mode } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './../../styles';\r\n\r\n@Component({\r\n  selector: 'cron-and',\r\n  templateUrl: './and.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CronAndComponent {\r\n  @Output() readonly selected = new EventEmitter<void>();\r\n  @Input() checked = false;\r\n  @Input() disabled = false;\r\n  @Input() disabledControls = false;\r\n  @Input() gridSize?: string;\r\n  @Input() label = '';\r\n  @Input() segmentId = '';\r\n  @Input() options: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() isValueSelected: (value: string) => boolean = () => false;\r\n  @Input() selectValue: (value: string) => boolean = () => false;\r\n  @Input() schema!: CronClassesSchema;\r\n  readonly mode = Mode.AND;\r\n\r\n  constructor(private readonly cd: ChangeDetectorRef) {}\r\n\r\n  changeValue(e: Event, value: string) {\r\n    const status = this.selectValue(value);\r\n    if (!status) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  detectChanges() {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"{{schema.formGroup}} c-and c-segment\">\r\n  <div class=\"{{schema.check.root}} c-and-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-and-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"segmentId\"\r\n      [value]=\"mode\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"selected.emit()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-and-option-label\"\r\n      [attr.for]=\"segmentId\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"{{schema.check.row}} c-and-list\">\r\n    @for (item of options; track item) {\r\n      <div\r\n        class=\"{{gridSize || (schema.col2 + ' ' + schema.colMd1)}} c-and-item\"\r\n        [attr.item-value]=\"item.value\">\r\n\r\n        <div class=\"{{schema.check.root}} c-and-item-check\">\r\n          <input\r\n            class=\"{{schema.check.field}} c-and-item-field\"\r\n            type=\"checkbox\"\r\n            [attr.id]=\"segmentId + '_' + item.value\"\r\n            [value]=\"item.value\"\r\n            [disabled]=\"disabledControls\"\r\n            [checked]=\"isValueSelected(item.value)\"\r\n            (click)=\"changeValue($event, item.value)\">\r\n\r\n          <label\r\n            class=\"{{schema.check.label}} c-and-item-label\"\r\n            [attr.for]=\"segmentId + '_' + item.value\">\r\n            {{item.label}}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CronContainerComponent",
            "id": "component-CronContainerComponent-57817b927c5d356086b8e1fab3e13cc7e787a68d1338c5ad50fb637079f34e5cd7d4abe27ddefbe250056cbd92d78a4231d748a503ea1a33d140c2faf6db194b",
            "file": "projects/ng-cron/src/lib/container/container.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-container",
            "styleUrls": [
                "./container.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "Type.MINUTES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hostClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Required<CronLocalization>",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "tabs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Type[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<literal type>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "'content'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "tabEls",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ElementRef> | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "'tabEl', {read: ElementRef}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "tabsLocalizationKeys",
                    "defaultValue": "{\r\n    [Type.DAY]: 'day',\r\n    [Type.HOURS]: 'hours',\r\n    [Type.MINUTES]: 'minutes',\r\n    [Type.MONTH]: 'month',\r\n    [Type.SECONDS]: 'seconds',\r\n    [Type.YEAR]: 'year'\r\n  } as const",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateTab",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTab",
                    "args": [
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, TemplateRef, ChangeDetectionStrategy, Input, ChangeDetectorRef, Output, EventEmitter, ViewChildren, ElementRef, QueryList } from '@angular/core';\r\nimport { Type } from '@sbzen/cron-core';\r\n\r\nimport { CronLocalization } from './../cron-localization';\r\nimport { CronClassesSchema } from './../styles';\r\n\r\n@Component({\r\n  selector: 'cron-container',\r\n  templateUrl: './container.html',\r\n  styleUrls: ['./container.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CronContainerComponent {\r\n  @ContentChild('content') content!: TemplateRef<{ $implicit: Type }>;\r\n  @ViewChildren('tabEl', { read: ElementRef }) tabEls: QueryList<ElementRef>|null = null;\r\n  @Output() readonly tabChanged = new EventEmitter<Type>();\r\n  @Input() localization!: Required<CronLocalization>;\r\n  @Input() hostClass = '';\r\n  @Input() activeTab = Type.MINUTES;\r\n  @Input() tabs: Type[] = [];\r\n  @Input() hideTabs = false;\r\n  @Input() schema!: CronClassesSchema;\r\n\r\n  readonly tabsLocalizationKeys = {\r\n    [Type.DAY]: 'day',\r\n    [Type.HOURS]: 'hours',\r\n    [Type.MINUTES]: 'minutes',\r\n    [Type.MONTH]: 'month',\r\n    [Type.SECONDS]: 'seconds',\r\n    [Type.YEAR]: 'year'\r\n  } as const;\r\n\r\n  constructor(private readonly cd: ChangeDetectorRef) {}\r\n\r\n  navigateTab(code: string, tab: Type) {\r\n    if (!this.tabEls || code !== 'ArrowRight' && code !== 'ArrowLeft') {\r\n      return;\r\n    }\r\n    const tabEls = this.tabEls.toArray().map(er => er.nativeElement);\r\n    const tabs = this.tabs;\r\n    const pos = tabs.indexOf(tab);\r\n    let toPos = 0;\r\n\r\n    if (code === 'ArrowRight') {\r\n      const nextPos = pos + 1;\r\n      toPos = (nextPos === tabs.length) ? 0 : nextPos;\r\n    }\r\n    if (code === 'ArrowLeft') {\r\n      const prevPos = pos - 1;\r\n      toPos = (prevPos < 0) ? tabs.length - 1 : prevPos;\r\n    }\r\n\r\n    this.setTab(tabs[toPos]);\r\n    const tabEl = tabEls[toPos];\r\n    if (tabEl) {\r\n      tabEl.focus();\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n\r\n  setTab(tab: Type) {\r\n    this.activeTab = tab;\r\n    this.cd.detectChanges();\r\n    this.tabChanged.emit(tab);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".c-tab-content {\r\n  outline: none;\r\n}\r\n",
                    "styleUrl": "./container.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"c-host {{hostClass}}\">\r\n  @if (!hideTabs && tabs.length) {\r\n    <ul\r\n      class=\"{{schema.tabs.root}} c-tabs\"\r\n      role=\"tablist\"\r\n      aria-label=\"Cron Generator Tabs\">\r\n\r\n      @for (item of tabs; track item) {\r\n        <li\r\n          class=\"{{schema.tabs.item}} c-tab-item\"\r\n          role=\"presentation\">\r\n\r\n          <button\r\n            role=\"tab\"\r\n            #tabEl\r\n            type=\"button\"\r\n            class=\"{{schema.tabs.link}} {{ activeTab === item ? schema.tabs.active : '' }} {{item}} c-tab\"\r\n            [attr.aria-selected]=\"activeTab === item\"\r\n            [attr.tabindex]=\"activeTab === item ? 0 : -1\"\r\n            (click)=\"setTab(item)\"\r\n            (keyup)=\"navigateTab($event.code, activeTab)\">\r\n\r\n            {{localization.tabs[tabsLocalizationKeys[item]]}}\r\n          </button>\r\n        </li>\r\n      }\r\n    </ul>\r\n  }\r\n\r\n  <div\r\n    class=\"c-tab-content\"\r\n    role=\"tabpanel\"\r\n    tabindex=\"0\"\r\n    [attr.tab-name]=\"activeTab\">\r\n\r\n    <ng-container *ngTemplateOutlet=\"content; context: { $implicit: activeTab }\"></ng-container>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CronEveryComponent",
            "id": "component-CronEveryComponent-13768ee9bf35ae2884d6c7a6c90b2844ea664b8d7ea19e0589926b0b427c44390702caaa109aba4796f89f598bac8dd4ff41aa09fc5e42f223298cf7295b4fc6",
            "file": "projects/ng-cron/src/lib/shared/every/every.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-every",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./every.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.EVERY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Mode } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './../../styles';\r\n\r\n@Component({\r\n  selector: 'cron-every',\r\n  templateUrl: './every.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CronEveryComponent {\r\n  @Output() readonly selected = new EventEmitter<void>();\r\n  @Input() checked = false;\r\n  @Input() disabled = false;\r\n  @Input() label = '';\r\n  @Input() segmentId = '';\r\n  @Input() schema!: CronClassesSchema;\r\n\r\n  readonly mode = Mode.EVERY;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"{{schema.formGroup}} c-every c-segment\">\r\n  <div class=\"{{schema.check.root}} c-every-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-every-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"segmentId\"\r\n      [value]=\"mode\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"selected.emit()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-every-option-label\"\r\n      [attr.for]=\"segmentId\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CronRangeComponent",
            "id": "component-CronRangeComponent-3eee6aa9c457716dbce4378d034d4fcd0e42d968d8983193903d20c5984cbde7ae9e7701437ef5883171b6ab8ad28e26af75edd9da0ba6aa9e9fefb93b08b85f",
            "file": "projects/ng-cron/src/lib/shared/range/range.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cron-range",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./range.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "secondaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "secondaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "secondaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.RANGE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Mode } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './../../styles';\r\n\r\n@Component({\r\n  selector: 'cron-range',\r\n  templateUrl: './range.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CronRangeComponent {\r\n  @Output() readonly selected = new EventEmitter<void>();\r\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\r\n  @Output() readonly secondaryValueChanged = new EventEmitter<string>();\r\n  @Input() segmentId = '';\r\n  @Input() checked = false;\r\n  @Input() disabled = false;\r\n  @Input() disabledControls = false;\r\n  @Input() label = '';\r\n  @Input() label2 = '';\r\n  @Input() primaryValue = '';\r\n  @Input() primaryOptions: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() secondaryValue = '';\r\n  @Input() secondaryOptions: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() schema!: CronClassesSchema;\r\n  readonly mode = Mode.RANGE;\r\n\r\n  setPrimaryValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    this.primaryValueChanged.emit(el.value);\r\n  }\r\n\r\n  setSecondaryValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    this.secondaryValueChanged.emit(el.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"{{schema.formGroup}} {{schema.formInline}} c-range c-segment\">\r\n  <div class=\"{{schema.check.root}} c-range-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-range-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"segmentId\"\r\n      [value]=\"mode\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"selected.emit()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-range-option-label\"\r\n      [attr.for]=\"segmentId\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-range-from\"\r\n    [disabled]=\"disabledControls\"\r\n    (change)=\"setPrimaryValue($event)\">\r\n\r\n    @for (item of primaryOptions; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"primaryValue === item.value\">\r\n        {{item.label}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-range-option-label2\"\r\n    [attr.for]=\"segmentId\">\r\n    {{label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.ml1}} c-range-to\"\r\n    [disabled]=\"disabledControls\"\r\n    (change)=\"setSecondaryValue($event)\">\r\n\r\n    @for (item of secondaryOptions; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"secondaryValue === item.value\">\r\n        {{item.label}}\r\n      </option>\r\n    }\r\n  </select>\r\n</div>\r\n"
        },
        {
            "name": "QuartzCronComponent",
            "id": "component-QuartzCronComponent-4c8498561010f75447f55b3d53739ae9e6ad3d3daeb0803055d3898ec58dea86d6e993ccf99d469d61ab71df914658aafb5ea8aee613b5b704ccf56d66262bd6",
            "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronQuartzUIService, useFactory: quartzCronServiceFactory\n}",
                    "type": "injectable"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => QuartzCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "quartz-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quartz.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Type, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronHostComponent } from './../cron-host.abstract';\r\nimport { cronBootstrap4 } from './../styles';\r\n\r\nexport function quartzCronServiceFactory() {\r\n  return new CronQuartzUIService();\r\n};\r\n\r\n@Component({\r\n  selector: 'quartz-cron',\r\n  templateUrl: './quartz.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: CronQuartzUIService,\r\n      useFactory: quartzCronServiceFactory\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => QuartzCronComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class QuartzCronComponent extends CronHostComponent {\r\n  constructor(\r\n    cd: ChangeDetectorRef,\r\n    cronQuartzUI: CronQuartzUIService\r\n  ) {\r\n    super(\r\n      cd,\r\n      cronQuartzUI,\r\n      [\r\n        Type.SECONDS,\r\n        Type.MINUTES,\r\n        Type.HOURS,\r\n        Type.DAY,\r\n        Type.MONTH,\r\n        Type.YEAR\r\n      ],\r\n      cronBootstrap4\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cronQuartzUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronHostComponent"
            ],
            "templateData": "<cron-container\r\n  hostClass=\"c-quartz\"\r\n  [localization]=\"getLocalization()\"\r\n  [tabs]=\"getTabs()\"\r\n  [activeTab]=\"getActiveTab()\"\r\n  [hideTabs]=\"hideTabs\"\r\n  [schema]=\"schema\"\r\n  (tabChanged)=\"tabChanged.emit($event)\">\r\n\r\n  <ng-template\r\n    #content\r\n    let-activeTab>\r\n\r\n    @if (activeTab === type.MONTH) {\r\n      <quartz-cron-month\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-month>\r\n    } @else if (activeTab === type.MINUTES) {\r\n      <quartz-cron-minute\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-minute>\r\n    } @else if (activeTab === type.HOURS) {\r\n      <quartz-cron-hour\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-hour>\r\n    } @else if (activeTab === type.SECONDS) {\r\n      <quartz-cron-second\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-second>\r\n    } @else if (activeTab === type.YEAR) {\r\n      <quartz-cron-year\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-year>\r\n    } @else if (activeTab === type.DAY) {\r\n      <quartz-cron-day\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </quartz-cron-day>\r\n    }\r\n  </ng-template>\r\n</cron-container>\r\n"
        },
        {
            "name": "QuartzCronDayComponent",
            "id": "component-QuartzCronDayComponent-854304e49ec8b8e424818d6dc26fec2ab61e59a666dd50534a322b3abcccd9bb6055f7ceea79a772254629e444b4bda5b20385ae540dd12d4e545ff1ea9416ea",
            "file": "projects/ng-cron/src/lib/quartz/tabs/day/day.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./day.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.DAY)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfMonth",
                    "defaultValue": "getList(Segment.dayOfMonth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfMonthEvery",
                    "defaultValue": "getList(Segment.dayOfMonth, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeek",
                    "defaultValue": "getList(Segment.dayOfWeek)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeekCodes",
                    "defaultValue": "getDaysOfWeekCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeekEvery",
                    "defaultValue": "getList(Segment.dayOfWeek, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "limitedDaysOfMonth",
                    "defaultValue": "this.daysOfMonthEvery.slice(0, 5)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "segment",
                    "defaultValue": "Segment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "segments",
                    "defaultValue": "[Segment.dayOfMonth, Segment.dayOfWeek]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getEventValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthDaysBeforeEndMonthValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthNearestWeekDayOfMonthValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekLastNTHDayWeekValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekNTHWeekDayOfMonthPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekNTHWeekDayOfMonthSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getDaysOfWeekCodes, getList, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabComponent } from './../../../cron-tab.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-day',\r\n  templateUrl: './day.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronDayComponent extends CronTabComponent {\r\n  readonly api = this.cronUI.getApi(Type.DAY);\r\n  readonly segment = Segment;\r\n  readonly segments = [Segment.dayOfMonth, Segment.dayOfWeek];\r\n\r\n  readonly daysOfWeekEvery = getList(Segment.dayOfWeek, true);\r\n  readonly daysOfWeek = getList(Segment.dayOfWeek);\r\n  readonly daysOfWeekCodes = getDaysOfWeekCodes();\r\n\r\n  readonly daysOfMonthEvery = getList(Segment.dayOfMonth, true);\r\n  readonly daysOfMonth = getList(Segment.dayOfMonth);\r\n  readonly limitedDaysOfMonth = this.daysOfMonthEvery.slice(0, 5);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  setDayOfWeekIncrementPrimary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekIncrementPrimary(value);\r\n  }\r\n\r\n  setDayOfWeekIncrementSecondary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekIncrementSecondary(value);\r\n  }\r\n\r\n  setDayOfMonthIncrementPrimary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthIncrementPrimary(value);\r\n  }\r\n\r\n  setDayOfMonthIncrementSecondary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthIncrementSecondary(value);\r\n  }\r\n\r\n  setDayOfWeekLastNTHDayWeekValue(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekLastNTHDayWeekValue(value);\r\n  }\r\n\r\n  setDayOfMonthDaysBeforeEndMonthValue(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthDaysBeforeEndMonthValue(value);\r\n  }\r\n\r\n  setDayOfMonthNearestWeekDayOfMonthValue(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthNearestWeekDayOfMonthValue(value);\r\n  }\r\n\r\n  setDayOfWeekNTHWeekDayOfMonthPrimaryValue(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekNTHWeekDayOfMonthPrimaryValue(value);\r\n  }\r\n\r\n  setDayOfWeekNTHWeekDayOfMonthSecondaryValue(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekNTHWeekDayOfMonthSecondaryValue(value);\r\n  }\r\n\r\n  private getEventValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    return el.value;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabComponent"
            ],
            "templateData": "<div class=\"{{schema.formGroup}} c-every-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-every-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-every-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.EVERY, segment.dayOfWeek)\"\r\n      [value]=\"mode.EVERY\"\r\n      [checked]=\"api.isEverySelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectEvery()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-every-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.EVERY, segment.dayOfWeek)\">\r\n\r\n      {{localization.quartz.day.every.label}}\r\n    </label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfWeek)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfWeekIncrementSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekIncrement()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\r\n\r\n      {{localization.quartz.day.dayOfWeekIncrement.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-weekday-every\"\r\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfWeekIncrementPrimary($event)\">\r\n\r\n    @for (item of daysOfWeekEvery; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekIncrementPrimary() === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-weekday-option-label2\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\r\n    {{localization.quartz.day.dayOfWeekIncrement.label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-weekday-from\"\r\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfWeekIncrementSecondary($event)\">\r\n\r\n    @for (item of daysOfWeek; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekIncrementSecondary() === item.value\">\r\n\r\n        {{localizeLabel(item.label, this.localization.common.dayOfWeek)}}\r\n      </option>\r\n    }\r\n  </select>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment-monthday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-monthday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-monthday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfMonth)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfMonthIncrementSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthIncrement()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-monthday-option-label\"\r\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n\r\n      {{localization.quartz.day.dayOfMonthIncrement.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-monthday-every\"\r\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfMonthIncrementPrimary($event)\">\r\n\r\n    @for (item of daysOfMonth; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfMonthIncrementPrimary() === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-monthday-option-label2\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n\r\n    {{localization.quartz.day.dayOfMonthIncrement.label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-monthday-from\"\r\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfMonthIncrementSecondary($event)\">\r\n\r\n    @for (item of daysOfMonthEvery; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfMonthIncrementSecondary() === item.value\">\r\n\r\n        {{localizeLabel(item.label, localization.common.dayOfMonth)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-monthday-option-label3\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n\r\n    {{localization.quartz.day.dayOfMonthIncrement.label3}}\r\n  </label>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} c-and-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-and-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-and-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.AND, segment.dayOfWeek)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfWeekAndSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekAnd()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-and-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.AND, segment.dayOfWeek)\">\r\n\r\n      {{localization.quartz.day.dayOfWeekAnd.label}}\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"{{schema.check.row}} c-and-weekday-list\">\r\n    @for (item of daysOfWeekCodes; track item) {\r\n      <div\r\n        class=\"{{schema.col3}} {{schema.colMd2}} c-and-weekday-item\"\r\n        [attr.item-value]=\"item.value\">\r\n\r\n        <div class=\"{{schema.check.root}} c-and-weekday-item-check\">\r\n          <input\r\n            class=\"{{schema.check.field}} c-and-weekday-item-field\"\r\n            type=\"checkbox\"\r\n            [attr.id]=\"genId(mode.AND, segment.dayOfWeek + item.value)\"\r\n            [value]=\"item.value\"\r\n            [disabled]=\"api.isDayOfWeekAndControlsDisabled()\"\r\n            [checked]=\"api.isSelectedDayOfWeekAndValue(item.value)\"\r\n            (click)=\"api.selectDayOfWeekAndValue(item.value)\">\r\n\r\n          <label\r\n            class=\"{{schema.check.label}} c-and-weekday-item-label\"\r\n            [attr.for]=\"genId(mode.AND, segment.dayOfWeek + item.value)\">\r\n            {{localizeLabel(item.label, localization.common.dayOfWeek)}}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.day.dayOfWeekRange.label1\"\r\n  [label2]=\"localization.quartz.day.dayOfWeekRange.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isDayOfWeekRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isDayOfWeekRangeControlsDisabled()\"\r\n  [primaryOptions]=\"localizeList(daysOfWeekCodes, localization.common.dayOfWeek)\"\r\n  [secondaryOptions]=\"localizeList(daysOfWeekCodes, localization.common.dayOfWeek)\"\r\n  [primaryValue]=\"api.getDayOfWeekRangePrimary()\"\r\n  [secondaryValue]=\"api.getDayOfWeekRangeSecondary()\"\r\n  (selected)=\"api.selectDayOfWeekRange()\"\r\n  (primaryValueChanged)=\"api.setDayOfWeekRangePrimary($event)\"\r\n  (secondaryValueChanged)=\"api.setDayOfWeekRangeSecondary($event)\">\r\n</cron-range>\r\n\r\n<div class=\"{{schema.formGroup}} c-and-monthday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-and-monthday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-and-monthday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.AND, segment.dayOfMonth)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfMonthAndSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthAnd()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-and-monthday-option-label\"\r\n      [attr.for]=\"genId(mode.AND, segment.dayOfMonth)\">\r\n\r\n      {{localization.quartz.day.dayOfMonthAnd.label}}\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"{{schema.check.row}} c-and-monthday-list\">\r\n    @for (item of daysOfMonth; track item) {\r\n      <div\r\n        class=\"{{schema.col2}} {{schema.colMd1}} c-and-monthday-item\"\r\n        [attr.item-value]=\"item.value\">\r\n\r\n        <div class=\"{{schema.check.root}} c-and-monthday-item-check\">\r\n          <input\r\n            class=\"{{schema.check.field}} c-and-monthday-item-field\"\r\n            type=\"checkbox\"\r\n            [attr.id]=\"genId(mode.AND, segment.dayOfMonth + item.value)\"\r\n            [value]=\"item.value\"\r\n            [disabled]=\"api.isDayOfMonthAndControlsDisabled()\"\r\n            [checked]=\"api.isSelectedDayOfMonthAndValue(item.value)\"\r\n            (click)=\"api.selectDayOfMonthAndValue(item.value)\">\r\n\r\n          <label\r\n            class=\"{{schema.check.label}} c-and-monthday-item-label\"\r\n            [attr.for]=\"genId(mode.AND, segment.dayOfMonth + item.value)\">\r\n            {{item.label}}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} c-last-monthday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-last-monthday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-last-monthday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.LAST_DAY, segment.dayOfMonth)\"\r\n      [value]=\"mode.LAST_DAY\"\r\n      [checked]=\"api.isDayOfMonthLastDaySelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthLastDay()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-last-monthday-option-label\"\r\n      [attr.for]=\"genId(mode.LAST_DAY, segment.dayOfMonth)\">\r\n\r\n      {{localization.quartz.day.dayOfMonthLastDay.label}}\r\n    </label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} c-last-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-last-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-last-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.LAST_DAY_WEEK, segment.dayOfMonth)\"\r\n      [value]=\"mode.LAST_DAY_WEEK\"\r\n      [checked]=\"api.isDayOfMonthLastDayWeekSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthLastDayWeek()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-last-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.LAST_DAY_WEEK, segment.dayOfMonth)\">\r\n\r\n      {{localization.quartz.day.dayOfMonthLastDayWeek.label}}\r\n    </label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-last-nth c-segment\">\r\n  <div class=\"{{schema.check.root}} c-last-nth-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-last-nth-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\"\r\n      [value]=\"mode.LAST_NTH_DAY_WEEK\"\r\n      [checked]=\"api.isDayOfWeekLastNTHDayWeekSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekLastNTHDayWeek()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-last-nth-option-label\"\r\n      [attr.for]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\">\r\n\r\n      {{localization.quartz.day.dayOfWeekLastNTHDayWeek.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-last-nth-weekday\"\r\n    [disabled]=\"api.isDayOfWeekLastNTHDayWeekControlsDisabled()\"\r\n    (change)=\"setDayOfWeekLastNTHDayWeekValue($event)\">\r\n\r\n    @for (item of daysOfWeek; track item) {\r\n      <option\r\n        [value]=\"item.value + 'L'\"\r\n        [selected]=\"api.getDayOfWeekLastNTHDayWeekValue() === item.value\">\r\n        {{localizeLabel(item.label, localization.common.dayOfWeek)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-last-nth-option-label2\"\r\n    [attr.for]=\"genId(mode.LAST_NTH_DAY_WEEK, segment.dayOfWeek)\">\r\n    {{localization.quartz.day.dayOfWeekLastNTHDayWeek.label2}}\r\n  </label>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-day-before-end c-segment\">\r\n  <div class=\"{{schema.check.root}} c-day-before-end-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-day-before-end-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.DAYS_BEFORE_END_MONTH, segment.dayOfMonth)\"\r\n      [value]=\"mode.DAYS_BEFORE_END_MONTH\"\r\n      [checked]=\"api.isDayOfMonthDaysBeforeEndMonthSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthDaysBeforeEndMonth()\">\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-day-before-end-monthday\"\r\n    [disabled]=\"api.isDayOfMonthDaysBeforeEndMonthControlsDisabled()\"\r\n    (change)=\"setDayOfMonthDaysBeforeEndMonthValue($event)\">\r\n\r\n    @for (item of daysOfMonth; track item) {\r\n      <option\r\n        [value]=\"'L-' + item.value\"\r\n        [selected]=\"api.getDayOfMonthDaysBeforeEndMonthValue() === item.value\">\r\n        {{item.label}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-day-before-end-option-label\"\r\n    [attr.for]=\"genId(mode.DAYS_BEFORE_END_MONTH, segment.dayOfMonth)\">\r\n    {{localization.quartz.day.dayOfMonthDaysBeforeEndMonth.label}}\r\n  </label>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-nearest c-segment\">\r\n  <div class=\"{{schema.check.root}} c-nearest-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-nearest-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\"\r\n      [value]=\"mode.NEAREST_WEEKDAY_OF_MONTH\"\r\n      [checked]=\"api.isDayOfMonthNearestWeekDayOfMonthSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthNearestWeekDayOfMonth()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-nearest-option-label\"\r\n      [attr.for]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\">\r\n\r\n      {{localization.quartz.day.dayOfMonthNearestWeekDayOfMonth.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-nearest-monthday\"\r\n    [disabled]=\"api.isDayOfMonthNearestWeekDayOfMonthControlsDisabled()\"\r\n    (change)=\"setDayOfMonthNearestWeekDayOfMonthValue($event)\">\r\n\r\n    @for (item of daysOfMonthEvery; track item) {\r\n      <option\r\n        [value]=\"item.value + 'W'\"\r\n        [selected]=\"api.getDayOfMonthNearestWeekDayOfMonthValue() === item.value\">\r\n        {{localizeLabel(item.label, localization.common.dayOfMonth)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-nearest-option-label2\"\r\n    [attr.for]=\"genId(mode.NEAREST_WEEKDAY_OF_MONTH, segment.dayOfMonth)\">\r\n    {{localization.quartz.day.dayOfMonthNearestWeekDayOfMonth.label2}}\r\n  </label>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-nth c-segment\">\r\n  <div class=\"{{schema.check.root}} c-nth-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-nth-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\"\r\n      [value]=\"mode.NTH_WEEKDAY_OF_MONTH\"\r\n      [checked]=\"api.isDayOfWeekNTHWeekDayOfMonthSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekNTHWeekDayOfMonth()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-nth-option-label\"\r\n      [attr.for]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\">\r\n\r\n      {{localization.quartz.day.dayOfWeekNTHWeekDayOfMonth.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-nth-every\"\r\n    [disabled]=\"api.isDayOfWeekNTHWeekDayOfMonthControlsDisabled()\"\r\n    (change)=\"setDayOfWeekNTHWeekDayOfMonthPrimaryValue($event)\">\r\n\r\n    @for (item of limitedDaysOfMonth; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekNTHWeekDayOfMonthPrimaryValue() === item.value\">\r\n        {{localizeLabel(item.label, localization.common.dayOfMonth)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-nth-every-weekday\"\r\n    [disabled]=\"api.isDayOfWeekNTHWeekDayOfMonthControlsDisabled()\"\r\n    (change)=\"setDayOfWeekNTHWeekDayOfMonthSecondaryValue($event)\">\r\n\r\n    @for (item of daysOfWeek; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekNTHWeekDayOfMonthSecondaryValue() === item.value\">\r\n        {{localizeLabel(item.label, localization.common.dayOfWeek)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-nth-option-label2\"\r\n    [attr.for]=\"genId(mode.NTH_WEEKDAY_OF_MONTH, segment.dayOfWeek)\">\r\n    {{localization.quartz.day.dayOfWeekNTHWeekDayOfMonth.label2}}\r\n  </label>\r\n</div>\r\n"
        },
        {
            "name": "QuartzCronHourComponent",
            "id": "component-QuartzCronHourComponent-dacb3d091075df5127e9ed91a15220ed60e21d704ffd5c706ff18187838daea2e3858f7d628c054151a8e69542b6d08f901a2afc5250598e697f1cb6db72d070",
            "file": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-hour",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hour.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.HOURS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hourCodes",
                    "defaultValue": "getList(Segment.hours, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hours",
                    "defaultValue": "getList(Segment.hours)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-hour',\r\n  templateUrl: './hour.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronHourComponent extends CronTabSingleSegmentComponent {\r\n  readonly hourCodes = getList(Segment.hours, true);\r\n  readonly hours = getList(Segment.hours);\r\n  readonly api = this.cronUI.getApi(Type.HOURS);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.HOURS);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.quartz.hour.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<quartz-cron-increment\r\n  [label]=\"localization.quartz.hour.increment.label1\"\r\n  [label2]=\"localization.quartz.hour.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"hourCodes\"\r\n  [secondaryOptions]=\"hours\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\r\n</quartz-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.quartz.hour.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"hours\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.hour.range.label1\"\r\n  [label2]=\"localization.quartz.hour.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"hours\"\r\n  [secondaryOptions]=\"hours\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "QuartzCronIncrementComponent",
            "id": "component-QuartzCronIncrementComponent-1101cdc27424ec88f62e8d685209328a002022beeb95a60afc0d4bb6eb42893fb85f21a2097a8680ec5200dd294ee08851e0b2bc5f54e32f94d7873efc8722ce",
            "file": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-increment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./increment.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "secondaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "secondaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "secondaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.INCREMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSecondaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Mode } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './../../../../styles';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-increment',\r\n  templateUrl: './increment.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronIncrementComponent {\r\n  @Output() readonly selected = new EventEmitter<void>();\r\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\r\n  @Output() readonly secondaryValueChanged = new EventEmitter<string>();\r\n  @Input() segmentId = '';\r\n  @Input() checked = false;\r\n  @Input() disabled = false;\r\n  @Input() disabledControls = false;\r\n  @Input() label = '';\r\n  @Input() label2 = '';\r\n  @Input() primaryValue = '';\r\n  @Input() primaryOptions: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() secondaryValue = '';\r\n  @Input() secondaryOptions: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() schema!: CronClassesSchema;\r\n  readonly mode = Mode.INCREMENT;\r\n\r\n  setPrimaryValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    this.primaryValueChanged.emit(el.value);\r\n  }\r\n\r\n  setSecondaryValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    this.secondaryValueChanged.emit(el.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"segmentId\"\r\n      [value]=\"mode\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"selected.emit()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-option-label\"\r\n      [attr.for]=\"segmentId\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-every\"\r\n    [disabled]=\"disabledControls\"\r\n    (change)=\"setPrimaryValue($event)\">\r\n\r\n    @for (item of primaryOptions; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"primaryValue === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-option-label2\"\r\n    [attr.for]=\"segmentId\">\r\n    {{label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.ml1}} c-increment-from\"\r\n    [disabled]=\"disabledControls\"\r\n    (change)=\"setSecondaryValue($event)\">\r\n\r\n    @for (item of secondaryOptions; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"secondaryValue === item.value\">\r\n        {{item.label}}\r\n      </option>\r\n    }\r\n  </select>\r\n</div>\r\n"
        },
        {
            "name": "QuartzCronMinuteComponent",
            "id": "component-QuartzCronMinuteComponent-0df8b29d2186bb90200db5c2913b6c021c71710caa7e7f4a617c2869fd6f3a77dd63a3f9b9c0f50a48907d5d6d47135e4d317849d0f6d677c15bb333f5b27fe7",
            "file": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-minute",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./minute.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MINUTES)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "minuteCodes",
                    "defaultValue": "getList(Segment.minutes, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "minutes",
                    "defaultValue": "getList(Segment.minutes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-minute',\r\n  templateUrl: './minute.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronMinuteComponent extends CronTabSingleSegmentComponent {\r\n  readonly minuteCodes = getList(Segment.minutes, true);\r\n  readonly minutes = getList(Segment.minutes);\r\n  readonly api = this.cronUI.getApi(Type.MINUTES);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.MINUTES);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.quartz.minute.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<quartz-cron-increment\r\n  [label]=\"localization.quartz.minute.increment.label1\"\r\n  [label2]=\"localization.quartz.minute.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"minuteCodes\"\r\n  [secondaryOptions]=\"minutes\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\r\n</quartz-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.quartz.minute.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"minutes\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.minute.range.label1\"\r\n  [label2]=\"localization.quartz.minute.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"minutes\"\r\n  [secondaryOptions]=\"minutes\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "QuartzCronMonthComponent",
            "id": "component-QuartzCronMonthComponent-96419858ad387c650555e478a6001b729ba78eb173f0a65504203e998328823c396749805f2ab3e7f07cd242f04c02d248b4ed17d63678908fbe7606e735a5db",
            "file": "projects/ng-cron/src/lib/quartz/tabs/month/month.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-month",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./month.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MONTH)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "incrementPrimaryOptions",
                    "defaultValue": "this.monthes.map((v, i) => ({\r\n    ...v,\r\n    label: i + 1\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "monthCodes",
                    "defaultValue": "getMonthCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "monthes",
                    "defaultValue": "getList(Segment.month)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getMonthCodes, getList, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-month',\r\n  templateUrl: './month.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronMonthComponent extends CronTabSingleSegmentComponent {\r\n  readonly monthCodes = getMonthCodes();\r\n  readonly monthes = getList(Segment.month);\r\n  readonly incrementPrimaryOptions = this.monthes.map((v, i) => ({\r\n    ...v,\r\n    label: i + 1\r\n  }));\r\n  readonly api = this.cronUI.getApi(Type.MONTH);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.MONTH);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.quartz.month.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<quartz-cron-increment\r\n  [label]=\"localization.quartz.month.increment.label1\"\r\n  [label2]=\"localization.quartz.month.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"incrementPrimaryOptions\"\r\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\r\n</quartz-cron-increment>\r\n\r\n<cron-and\r\n  gridSize=\"{{schema.col3}} {{schema.colMd2}}\"\r\n  [label]=\"localization.quartz.month.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"localizeList(monthCodes, localization.common.month)\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.month.range.label1\"\r\n  [label2]=\"localization.quartz.month.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"localizeList(monthes, localization.common.month)\"\r\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "QuartzCronSecondComponent",
            "id": "component-QuartzCronSecondComponent-71a7db2c8661286d274382deffc0f483bff2e2f5b43567dcaa127cfc6fb441605d23846de772280f92982e28220e7ebf6563006f3e7e709dceeb9c3d1e160d9b",
            "file": "projects/ng-cron/src/lib/quartz/tabs/second/second.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-second",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./second.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.SECONDS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "secondCodes",
                    "defaultValue": "getList(Segment.seconds, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "seconds",
                    "defaultValue": "getList(Segment.seconds)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-second',\r\n  templateUrl: './second.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronSecondComponent extends CronTabSingleSegmentComponent {\r\n  readonly secondCodes = getList(Segment.seconds, true);\r\n  readonly seconds = getList(Segment.seconds);\r\n  readonly api = this.cronUI.getApi(Type.SECONDS);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.SECONDS);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.quartz.second.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<quartz-cron-increment\r\n  [label]=\"localization.quartz.second.increment.label1\"\r\n  [label2]=\"localization.quartz.second.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"secondCodes\"\r\n  [secondaryOptions]=\"seconds\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\r\n</quartz-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.quartz.second.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"seconds\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.second.range.label1\"\r\n  [label2]=\"localization.quartz.second.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"seconds\"\r\n  [secondaryOptions]=\"seconds\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "QuartzCronYearComponent",
            "id": "component-QuartzCronYearComponent-afc5cb56e535206e778f274c60a822815fa756bce4f6d3d6c763158d5143495c38e9bef0c0d270a4a6c9fffb0d59d88b6360c396533b04c7bcbfb41dcedb49ae",
            "file": "projects/ng-cron/src/lib/quartz/tabs/year/year.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quartz-cron-year",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./year.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.YEAR)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "yearCodes",
                    "defaultValue": "getList(Segment.year, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "years",
                    "defaultValue": "getList(Segment.year)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, getList, Type, CronQuartzUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'quartz-cron-year',\r\n  templateUrl: './year.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class QuartzCronYearComponent extends CronTabSingleSegmentComponent {\r\n  readonly yearCodes = getList(Segment.year, true);\r\n  readonly years = getList(Segment.year);\r\n  readonly api = this.cronUI.getApi(Type.YEAR);\r\n\r\n  constructor(\r\n    readonly cronUI: CronQuartzUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.YEAR);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronQuartzUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.quartz.year.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<quartz-cron-increment\r\n  [label]=\"localization.quartz.year.increment.label1\"\r\n  [label2]=\"localization.quartz.year.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"yearCodes\"\r\n  [secondaryOptions]=\"years\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  [secondaryValue]=\"api.getIncrementSecondaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setIncrementSecondaryValue($event)\">\r\n</quartz-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.quartz.year.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"years\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.quartz.year.range.label1\"\r\n  [label2]=\"localization.quartz.year.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"years\"\r\n  [secondaryOptions]=\"years\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "UnixCronComponent",
            "id": "component-UnixCronComponent-6ceb9902792c79e8e9f4f55ba094ee05c01186aa8f44f214c8009b4888e6b59d4e8dc762b6c83e1074ce843eb8f31ab72f9105c39c3b5cbd6a8c68526d1a1c2b",
            "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: CronUnixUIService, useFactory: unixCronServiceFactory\n}",
                    "type": "injectable"
                },
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => UnixCronComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "unix-cron",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./unix.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeTab",
                    "defaultValue": "this.getActiveTab()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "Type",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "cssClassPrefix",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | null | boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "hideTabs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "CronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabs",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Type[] | null",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "tabChanged",
                    "defaultValue": "new EventEmitter<Type>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "onTouched",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "type",
                    "defaultValue": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getActiveTab",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getLocalization",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "getTabs",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "mergeDeep",
                    "args": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "objects",
                            "type": "RawObject[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "cronValue",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cronValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronHostComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Type, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronHostComponent } from './../cron-host.abstract';\r\nimport { cronBootstrap4 } from './../styles';\r\n\r\nexport function unixCronServiceFactory() {\r\n  return new CronUnixUIService()\r\n};\r\n\r\n@Component({\r\n  selector: 'unix-cron',\r\n  templateUrl: './unix.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: CronUnixUIService,\r\n      useFactory: unixCronServiceFactory\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => UnixCronComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class UnixCronComponent extends CronHostComponent {\r\n  constructor(\r\n    cd: ChangeDetectorRef,\r\n    cronUnixUI: CronUnixUIService\r\n  ) {\r\n    super(\r\n      cd,\r\n      cronUnixUI,\r\n      [Type.MINUTES, Type.HOURS, Type.DAY, Type.MONTH],\r\n      cronBootstrap4\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cronUnixUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronHostComponent"
            ],
            "templateData": "<cron-container\r\n  hostClass=\"c-unix\"\r\n  [localization]=\"getLocalization()\"\r\n  [tabs]=\"getTabs()\"\r\n  [activeTab]=\"getActiveTab()\"\r\n  [hideTabs]=\"hideTabs\"\r\n  [schema]=\"schema\"\r\n  (tabChanged)=\"tabChanged.emit($event)\">\r\n\r\n  <ng-template\r\n    #content\r\n    let-activeTab>\r\n\r\n    @if (activeTab === type.MONTH) {\r\n      <unix-cron-month\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-month>\r\n    } @else if (activeTab === type.MINUTES) {\r\n      <unix-cron-minute\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-minute>\r\n    } @else if (activeTab === type.HOURS) {\r\n      <unix-cron-hour\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-hour>\r\n    } @else if (activeTab === type.DAY) {\r\n      <unix-cron-day\r\n        [localization]=\"getLocalization()\"\r\n        [schema]=\"schema\"\r\n        (changed)=\"applyChanges()\">\r\n      </unix-cron-day>\r\n    }\r\n  </ng-template>\r\n</cron-container>\r\n"
        },
        {
            "name": "UnixCronDayComponent",
            "id": "component-UnixCronDayComponent-2075f600efa8624b276217706a842cafa1f4c7d6cd8dc2cd5ae3958c3e0730e05f048e40aeaa93827fbbfbf624500757081028292ec7027466d3f64cbe98cf33",
            "file": "projects/ng-cron/src/lib/unix/tabs/day/day.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-day",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./day.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi<Type.DAY>(Type.DAY)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfMonth",
                    "defaultValue": "getList(Segment.dayOfMonth)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfMonthEvery",
                    "defaultValue": "getList(Segment.dayOfMonth, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeek",
                    "defaultValue": "getList(Segment.dayOfWeek)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeekCodes",
                    "defaultValue": "getDaysOfWeekCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "daysOfWeekEvery",
                    "defaultValue": "getList(Segment.dayOfWeek, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "segment",
                    "defaultValue": "Segment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getEventValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfMonthIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementPrimary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDayOfWeekIncrementSecondary",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, getDaysOfWeekCodes, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabComponent } from './../../../cron-tab.abstract';\r\n\r\n@Component({\r\n  selector: 'unix-cron-day',\r\n  templateUrl: './day.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UnixCronDayComponent extends CronTabComponent {\r\n  protected readonly segments: Segment[];\r\n\r\n  readonly api = this.cronUI.getApi<Type.DAY>(Type.DAY);\r\n  readonly segment = Segment;\r\n\r\n  readonly daysOfWeekEvery = getList(Segment.dayOfWeek, true);\r\n  readonly daysOfWeek = getList(Segment.dayOfWeek);\r\n  readonly daysOfWeekCodes = getDaysOfWeekCodes();\r\n\r\n  readonly daysOfMonthEvery = getList(Segment.dayOfMonth, true);\r\n  readonly daysOfMonth = getList(Segment.dayOfMonth);\r\n\r\n  constructor(\r\n    readonly cronUI: CronUnixUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n    this.segments = [Segment.dayOfMonth, Segment.dayOfWeek];\r\n  }\r\n\r\n  setDayOfWeekIncrementPrimary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekIncrementPrimary(value);\r\n  }\r\n\r\n  setDayOfWeekIncrementSecondary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfWeekIncrementSecondary(value);\r\n  }\r\n\r\n  setDayOfMonthIncrementPrimary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthIncrementPrimary(value);\r\n  }\r\n\r\n  setDayOfMonthIncrementSecondary(e: Event) {\r\n    const value = this.getEventValue(e);\r\n    this.api.setDayOfMonthIncrementSecondary(value);\r\n  }\r\n\r\n  private getEventValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    return el.value;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabComponent"
            ],
            "templateData": "<div class=\"{{schema.formGroup}} c-every-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-every-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-every-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.EVERY, segment.dayOfWeek)\"\r\n      [value]=\"mode.EVERY\"\r\n      [checked]=\"api.isEverySelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectEvery()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-every-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.EVERY, segment.dayOfWeek)\">\r\n\r\n      {{localization.unix.day.every.label}}\r\n    </label>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfWeek)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfWeekIncrementSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekIncrement()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\r\n\r\n      {{localization.unix.day.dayOfWeekIncrement.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-weekday-every\"\r\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfWeekIncrementPrimary($event)\">\r\n\r\n    @for (item of daysOfWeekEvery; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekIncrementPrimary() === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-weekday-option-label2\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfWeek)\">\r\n    {{localization.unix.day.dayOfWeekIncrement.label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-weekday-from\"\r\n    [disabled]=\"api.isDayOfWeekIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfWeekIncrementSecondary($event)\">\r\n\r\n    @for (item of daysOfWeek; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfWeekIncrementSecondary() === item.value\">\r\n        {{localizeLabel(item.label, this.localization.common.dayOfWeek)}}\r\n      </option>\r\n    }\r\n  </select>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment-monthday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-monthday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-monthday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.INCREMENT, segment.dayOfMonth)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfMonthIncrementSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthIncrement()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-monthday-option-label\"\r\n      [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n\r\n      {{localization.unix.day.dayOfMonthIncrement.label1}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-monthday-every\"\r\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfMonthIncrementPrimary($event)\">\r\n\r\n    @for (item of daysOfMonth; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfMonthIncrementPrimary() === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-monthday-option-label2\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n    {{localization.unix.day.dayOfMonthIncrement.label2}}\r\n  </label>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-monthday-from\"\r\n    [disabled]=\"api.isDayOfMonthIncrementControlsDisabled()\"\r\n    (change)=\"setDayOfMonthIncrementSecondary($event)\">\r\n\r\n    @for (item of daysOfMonthEvery; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"api.getDayOfMonthIncrementSecondary() === item.value\">\r\n\r\n        {{localizeLabel(item.label, localization.common.dayOfMonth)}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-monthday-option-label3\"\r\n    [attr.for]=\"genId(mode.INCREMENT, segment.dayOfMonth)\">\r\n    {{localization.unix.day.dayOfMonthIncrement.label2}}\r\n  </label>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} c-and-weekday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-and-weekday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-and-weekday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.AND, segment.dayOfWeek)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfWeekAndSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfWeekAnd()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-and-weekday-option-label\"\r\n      [attr.for]=\"genId(mode.AND, segment.dayOfWeek)\">\r\n\r\n      {{localization.unix.day.dayOfWeekAnd.label}}\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"{{schema.check.row}} c-and-weekday-list\">\r\n    @for (item of daysOfWeekCodes; track item) {\r\n      <div\r\n        class=\"{{schema.col3}} {{schema.colMd2}} c-and-weekday-item\"\r\n        [attr.item-value]=\"item.value\">\r\n\r\n        <div class=\"{{schema.check.root}} c-and-weekday-item-check\">\r\n          <input\r\n            class=\"{{schema.check.field}} c-and-weekday-item-field\"\r\n            type=\"checkbox\"\r\n            [attr.id]=\"genId(mode.AND, segment.dayOfWeek + item.value)\"\r\n            [value]=\"item.value\"\r\n            [disabled]=\"api.isDayOfWeekAndControlsDisabled()\"\r\n            [checked]=\"api.isSelectedDayOfWeekAndValue(item.value)\"\r\n            (click)=\"api.selectDayOfWeekAndValue(item.value)\">\r\n\r\n          <label\r\n            class=\"{{schema.check.label}} c-and-weekday-item-label\"\r\n            [attr.for]=\"genId(mode.AND, segment.dayOfWeek + item.value)\">\r\n            {{localizeLabel(item.label, localization.common.dayOfWeek)}}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n\r\n<div class=\"{{schema.formGroup}} c-and-monthday c-segment\">\r\n  <div class=\"{{schema.check.root}} c-and-monthday-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-and-monthday-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"genId(mode.AND, segment.dayOfMonth)\"\r\n      [value]=\"mode.INCREMENT\"\r\n      [checked]=\"api.isDayOfMonthAndSelected()\"\r\n      [disabled]=\"cronUI.isDisabled()\"\r\n      (change)=\"api.selectDayOfMonthAnd()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-and-monthday-option-label\"\r\n      [attr.for]=\"genId(mode.AND, segment.dayOfMonth)\">\r\n\r\n      {{localization.unix.day.dayOfMonthAnd.label}}\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"{{schema.check.row}} c-and-monthday-list\">\r\n    @for (item of daysOfMonth; track item) {\r\n      <div\r\n        class=\"{{schema.col2}} {{schema.colMd1}} c-and-monthday-item\"\r\n        [attr.item-value]=\"item.value\">\r\n\r\n        <div class=\"{{schema.check.root}} c-and-monthday-item-check\">\r\n          <input\r\n            class=\"{{schema.check.field}} c-and-monthday-item-field\"\r\n            type=\"checkbox\"\r\n            [attr.id]=\"genId(mode.AND, segment.dayOfMonth + item.value)\"\r\n            [value]=\"item.value\"\r\n            [disabled]=\"api.isDayOfMonthAndControlsDisabled()\"\r\n            [checked]=\"api.isSelectedDayOfMonthAndValue(item.value)\"\r\n            (click)=\"api.selectDayOfMonthAndValue(item.value)\">\r\n\r\n          <label\r\n            class=\"{{schema.check.label}} c-and-monthday-item-label\"\r\n            [attr.for]=\"genId(mode.AND, segment.dayOfMonth + item.value)\">\r\n            {{item.label}}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "UnixCronHourComponent",
            "id": "component-UnixCronHourComponent-7b8ae63fb45ea489655e56c55d7c16d65c7ec2398ef6adcf5b7fb4b734eac8d106e2d682ad44af3d17a2ea0a8ab604ca800965e9e76da647b0deeecf399b01ef",
            "file": "projects/ng-cron/src/lib/unix/tabs/hour/hour.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-hour",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./hour.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.HOURS)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hourCodes",
                    "defaultValue": "getList(Segment.hours, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "hours",
                    "defaultValue": "getList(Segment.hours)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'unix-cron-hour',\r\n  templateUrl: './hour.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UnixCronHourComponent extends CronTabSingleSegmentComponent {\r\n  readonly hourCodes = getList(Segment.hours, true);\r\n  readonly hours = getList(Segment.hours);\r\n  readonly api = this.cronUI.getApi(Type.HOURS);\r\n\r\n  constructor(\r\n    readonly cronUI: CronUnixUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.HOURS);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.unix.hour.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<unix-cron-increment\r\n  [label]=\"localization.unix.hour.increment.label1\"\r\n  [label2]=\"localization.unix.hour.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"hourCodes\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\r\n</unix-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.unix.hour.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"hours\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.unix.hour.range.label1\"\r\n  [label2]=\"localization.unix.hour.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"hours\"\r\n  [secondaryOptions]=\"hours\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "UnixCronIncrementComponent",
            "id": "component-UnixCronIncrementComponent-0f00c681c1d056a1f093f4cbd2f381ce454f73ff71411307f3536a4247bf4a01620a4e97cddf636f21b0abdecad199d96340d51bbc3281cb245cf09ee387bac5",
            "file": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-increment",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./increment.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabledControls",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label2",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primaryOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "primaryValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "CronClassesSchema",
                    "decorators": []
                },
                {
                    "name": "segmentId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "primaryValueChanged",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "mode",
                    "defaultValue": "Mode.INCREMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setPrimaryValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Mode } from '@sbzen/cron-core';\r\n\r\nimport { CronClassesSchema } from './../../../../styles';\r\n\r\n@Component({\r\n  selector: 'unix-cron-increment',\r\n  templateUrl: './increment.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UnixCronIncrementComponent {\r\n  @Output() readonly selected = new EventEmitter<void>();\r\n  @Output() readonly primaryValueChanged = new EventEmitter<string>();\r\n  @Input() segmentId = '';\r\n  @Input() checked = false;\r\n  @Input() disabled = false;\r\n  @Input() disabledControls = false;\r\n  @Input() label = '';\r\n  @Input() label2 = '';\r\n  @Input() primaryValue = '';\r\n  @Input() primaryOptions: {\r\n    label: string|number,\r\n    value: string\r\n  }[] = [];\r\n  @Input() schema!: CronClassesSchema;\r\n  readonly mode = Mode.INCREMENT;\r\n\r\n  setPrimaryValue(e: Event) {\r\n    const el = e.target as HTMLSelectElement;\r\n    this.primaryValueChanged.emit(el.value);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"{{schema.formGroup}} {{schema.formInline}} c-increment c-segment\">\r\n  <div class=\"{{schema.check.root}} c-increment-check\">\r\n    <input\r\n      class=\"{{schema.check.field}} c-increment-option\"\r\n      type=\"radio\"\r\n      [attr.id]=\"segmentId\"\r\n      [value]=\"mode\"\r\n      [checked]=\"checked\"\r\n      [disabled]=\"disabled\"\r\n      (change)=\"selected.emit()\">\r\n\r\n    <label\r\n      class=\"{{schema.check.label}} c-increment-option-label\"\r\n      [attr.for]=\"segmentId\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n\r\n  <select\r\n    class=\"{{schema.formControl}} {{schema.mx1}} c-increment-every\"\r\n    [disabled]=\"disabledControls\"\r\n    (change)=\"setPrimaryValue($event)\">\r\n\r\n    @for (item of primaryOptions; track item) {\r\n      <option\r\n        [value]=\"item.value\"\r\n        [selected]=\"primaryValue === item.value\">\r\n        {{item.value}}\r\n      </option>\r\n    }\r\n  </select>\r\n\r\n  <label\r\n    class=\"c-increment-option-label2\"\r\n    [attr.for]=\"segmentId\">\r\n    {{label2}}\r\n  </label>\r\n</div>\r\n"
        },
        {
            "name": "UnixCronMinuteComponent",
            "id": "component-UnixCronMinuteComponent-44c75ea0c5218bf56385c9ccc4800e36310ecca2f9440904c152842e2f3d8ebe022a92e688cd4f835a41b1a8f1e1571926ecd761a0796531007709b629e6c1d3",
            "file": "projects/ng-cron/src/lib/unix/tabs/minute/minute.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-minute",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./minute.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MINUTES)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "minuteCodes",
                    "defaultValue": "getList(Segment.minutes, true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "minutes",
                    "defaultValue": "getList(Segment.minutes)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getList, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'unix-cron-minute',\r\n  templateUrl: './minute.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UnixCronMinuteComponent extends CronTabSingleSegmentComponent {\r\n  readonly minuteCodes = getList(Segment.minutes, true);\r\n  readonly minutes = getList(Segment.minutes);\r\n  readonly api = this.cronUI.getApi(Type.MINUTES);\r\n\r\n  constructor(\r\n    readonly cronUI: CronUnixUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.MINUTES);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.unix.minute.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<unix-cron-increment\r\n  [label]=\"localization.unix.minute.increment.label1\"\r\n  [label2]=\"localization.unix.minute.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"minuteCodes\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\r\n</unix-cron-increment>\r\n\r\n<cron-and\r\n  [label]=\"localization.unix.minute.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"minutes\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.unix.minute.range.label1\"\r\n  [label2]=\"localization.unix.minute.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"minutes\"\r\n  [secondaryOptions]=\"minutes\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        },
        {
            "name": "UnixCronMonthComponent",
            "id": "component-UnixCronMonthComponent-154a1327ac4251c4a6ea62590ba972b2ccc9a748c389c50558819f98b0e16f636151312132ae36369b28cc220739dda52c6306322fd22632f3ee2f5f5377a766",
            "file": "projects/ng-cron/src/lib/unix/tabs/month/month.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "unix-cron-month",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./month.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "localization",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FullCronLocalization",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "schema",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "CronClassesSchema",
                    "decorators": [],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "changed",
                    "defaultValue": "new EventEmitter<never>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "api",
                    "defaultValue": "this.cronUI.getApi(Type.MONTH)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "incrementPrimaryOptions",
                    "defaultValue": "this.monthes.map((v, i) => ({\r\n    ...v,\r\n    label: i + 1\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "monthCodes",
                    "defaultValue": "getMonthCodes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "monthes",
                    "defaultValue": "getList(Segment.month)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "and",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronAndComponent | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CronAndComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "segments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Segment[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        124,
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "cronUI",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronUnixUIService | CronQuartzUIService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        128,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "mode",
                    "defaultValue": "Mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "sessionId",
                    "defaultValue": "Date.now().toString()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "unListener",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "applyChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "getSegments",
                    "args": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "tab",
                            "type": "CronSingleType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabSingleSegmentComponent"
                    }
                },
                {
                    "name": "genId",
                    "args": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "mode",
                            "type": "Mode",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extra",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeLabel",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "localizeList",
                    "args": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "list",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "localizationStore",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CronTabComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Segment, Type, getMonthCodes, getList, CronUnixUIService } from '@sbzen/cron-core';\r\n\r\nimport { CronTabSingleSegmentComponent } from './../../../cron-tab-single-segment.abstract';\r\n\r\n@Component({\r\n  selector: 'unix-cron-month',\r\n  templateUrl: './month.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UnixCronMonthComponent extends CronTabSingleSegmentComponent {\r\n  readonly monthCodes = getMonthCodes();\r\n  readonly monthes = getList(Segment.month);\r\n  readonly incrementPrimaryOptions = this.monthes.map((v, i) => ({\r\n    ...v,\r\n    label: i + 1\r\n  }));\r\n  readonly api = this.cronUI.getApi(Type.MONTH);\r\n\r\n  constructor(\r\n    readonly cronUI: CronUnixUIService,\r\n    protected readonly cd: ChangeDetectorRef\r\n  ) {\r\n    super(Type.MONTH);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "cronUI",
                        "type": "CronUnixUIService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "CronTabSingleSegmentComponent"
            ],
            "templateData": "<cron-every\r\n  [label]=\"localization.unix.month.every.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isEverySelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.EVERY)\"\r\n  (selected)=\"api.selectEvery()\">\r\n</cron-every>\r\n\r\n<unix-cron-increment\r\n  [label]=\"localization.unix.month.increment.label1\"\r\n  [label2]=\"localization.unix.month.increment.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isIncrementSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.INCREMENT)\"\r\n  [disabledControls]=\"api.isIncrementControlsDisabled()\"\r\n  [primaryOptions]=\"incrementPrimaryOptions\"\r\n  [primaryValue]=\"api.getIncrementPrimaryValue()\"\r\n  (selected)=\"api.selectIncrement()\"\r\n  (primaryValueChanged)=\"api.setIncrementPrimaryValue($event)\">\r\n</unix-cron-increment>\r\n\r\n<cron-and\r\n  gridSize=\"{{schema.col3}} {{schema.colMd2}}\"\r\n  [label]=\"localization.unix.month.and.label\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isAndSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.AND)\"\r\n  [options]=\"localizeList(monthCodes, localization.common.month)\"\r\n  [disabledControls]=\"api.isAndControlsDisabled()\"\r\n  [isValueSelected]=\"api.isSelectedAndValue\"\r\n  [selectValue]=\"api.selectAndValue\"\r\n  (selected)=\"api.selectAnd()\">\r\n</cron-and>\r\n\r\n<cron-range\r\n  [label]=\"localization.unix.month.range.label1\"\r\n  [label2]=\"localization.unix.month.range.label2\"\r\n  [schema]=\"schema\"\r\n  [checked]=\"api.isRangeSelected()\"\r\n  [disabled]=\"cronUI.isDisabled()\"\r\n  [segmentId]=\"genId(mode.RANGE)\"\r\n  [disabledControls]=\"api.isRangeControlsDisabled()\"\r\n  [primaryOptions]=\"localizeList(monthes, localization.common.month)\"\r\n  [secondaryOptions]=\"localizeList(monthes, localization.common.month)\"\r\n  [primaryValue]=\"api.getRangePrimaryValue()\"\r\n  [secondaryValue]=\"api.getRangeSecondaryValue()\"\r\n  (selected)=\"api.selectRange()\"\r\n  (primaryValueChanged)=\"api.setRangePrimaryValue($event)\"\r\n  (secondaryValueChanged)=\"api.setRangeSecondaryValue($event)\">\r\n</cron-range>\r\n"
        }
    ],
    "modules": [
        {
            "name": "Bs5QuartzCronModule",
            "id": "module-Bs5QuartzCronModule-c5a79c1afbc1140d8a7f78aab5e141fa192f588089e95469546441305fa78d8f1c52eda6c4ff82cf798b3f94f4ae5be369dad5113bc81f006ba20c8467547303",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronContainerModule } from './../container';\r\nimport { QuartzCronMinuteModule } from './../quartz/tabs/minute';\r\nimport { QuartzCronMonthModule } from './../quartz/tabs/month';\r\nimport { QuartzCronHourModule } from './../quartz/tabs/hour';\r\nimport { QuartzCronSecondModule } from './../quartz/tabs/second';\r\nimport { QuartzCronYearModule } from './../quartz/tabs/year';\r\nimport { QuartzCronDayModule } from './../quartz/tabs/day';\r\n\r\nimport { Bs5QuartzCronComponent } from './bs5-quartz.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    QuartzCronMonthModule,\r\n    QuartzCronMinuteModule,\r\n    QuartzCronHourModule,\r\n    QuartzCronSecondModule,\r\n    QuartzCronYearModule,\r\n    QuartzCronDayModule,\r\n    CronContainerModule\r\n  ],\r\n  declarations: [Bs5QuartzCronComponent],\r\n  exports: [Bs5QuartzCronComponent]\r\n})\r\nexport class Bs5QuartzCronModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Bs5QuartzCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "QuartzCronDayModule"
                        },
                        {
                            "name": "QuartzCronHourModule"
                        },
                        {
                            "name": "QuartzCronMinuteModule"
                        },
                        {
                            "name": "QuartzCronMonthModule"
                        },
                        {
                            "name": "QuartzCronSecondModule"
                        },
                        {
                            "name": "QuartzCronYearModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "Bs5UnixCronModule",
            "id": "module-Bs5UnixCronModule-ee6bc355b3a12d416f1177adef4909d450cbc26808463943a3efc6aaf3b8175611c1fce1af2a59c48ab09d9010e5b317b4d5edda780623ffcf87e5a557ec9a19",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronContainerModule } from './../container';\r\nimport { UnixCronMinuteModule } from './../unix/tabs/minute';\r\nimport { UnixCronMonthModule } from './../unix/tabs/month';\r\nimport { UnixCronHourModule } from './../unix/tabs/hour';\r\nimport { UnixCronDayModule } from './../unix/tabs/day';\r\n\r\nimport { Bs5UnixCronComponent } from './bs5-unix.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UnixCronMinuteModule,\r\n    UnixCronMonthModule,\r\n    UnixCronHourModule,\r\n    UnixCronDayModule,\r\n    CronContainerModule\r\n  ],\r\n  declarations: [Bs5UnixCronComponent],\r\n  exports: [Bs5UnixCronComponent]\r\n})\r\nexport class Bs5UnixCronModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Bs5UnixCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "UnixCronDayModule"
                        },
                        {
                            "name": "UnixCronHourModule"
                        },
                        {
                            "name": "UnixCronMinuteModule"
                        },
                        {
                            "name": "UnixCronMonthModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronAndModule",
            "id": "module-CronAndModule-e390d22762a0ef3c5668ed65d84a9d3487ce40158d5856b1cddb0b3bdfdd1b6697ba25a7c608111f24580590a4c0b3147e2569a926816595702ac5661cafbaf0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/and/and.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndComponent } from './and.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CronAndComponent],\r\n  exports: [CronAndComponent]\r\n})\r\nexport class CronAndModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronAndComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronAndComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronContainerModule",
            "id": "module-CronContainerModule-973f97aba0bb121df4dcaeca9a44918d81e053a1c59e1de8f622bc88e5473bcafb73d3c9a53f9e9d653b9c277f82d971527bfa044552dffb5a63a80c9058fcd8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/container/container.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronContainerComponent } from './container.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CronContainerComponent],\r\n  exports: [CronContainerComponent]\r\n})\r\nexport class CronContainerModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronContainerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronEveryModule",
            "id": "module-CronEveryModule-a704217d8b6125b263cb0496cad8686a18a596dccb67e5b138cf4d624fdd761519a4dc08e9d42c8a63185881d2eb2aa9b418e2bc69e99245403723d7e40bb916",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/every/every.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronEveryComponent } from './every.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CronEveryComponent],\r\n  exports: [CronEveryComponent]\r\n})\r\nexport class CronEveryModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronEveryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronEveryComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CronRangeModule",
            "id": "module-CronRangeModule-9d02278c176806082a276731c7a58a79a2a8ecdfa61f77d430a7015a41ca1da6604ea75cc32b1fdffa3d02a806be8f71107f0f9d8ecb366b0da345d6e5822e22",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/shared/range/range.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronRangeComponent } from './range.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [CronRangeComponent],\r\n  exports: [CronRangeComponent]\r\n})\r\nexport class CronRangeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CronRangeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CronRangeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronDayModule",
            "id": "module-QuartzCronDayModule-a961dbbb76d16c6beb618fd4c2432bdf382d65ac4120216c9b8df571615a10fe1235b725d37ac55abd3c47744d19df3b99b930ca38f9aad65ca654d07f21e666",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/day/day.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronRangeModule } from './../../../shared';\r\nimport { QuartzCronDayComponent } from './day.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronRangeModule\r\n  ],\r\n  declarations: [QuartzCronDayComponent],\r\n  exports: [QuartzCronDayComponent]\r\n})\r\nexport class QuartzCronDayModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronRangeModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronHourModule",
            "id": "module-QuartzCronHourModule-075c2c823f30ac4bae91b51fedb51a469a641fd3001f51dfa6291113692495e32955f518e8d33d4f38e86d79d8e58410782734a6698e6f5f7158754ded2893f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { QuartzCronIncrementModule } from './../shared/increment';\r\nimport { QuartzCronHourComponent } from './hour.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    QuartzCronIncrementModule\r\n  ],\r\n  declarations: [QuartzCronHourComponent],\r\n  exports: [QuartzCronHourComponent]\r\n})\r\nexport class QuartzCronHourModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronIncrementModule",
            "id": "module-QuartzCronIncrementModule-6083c52e90714486b054ba7781da8cacaea94d846a00220707dc5a10a2eed57a3f6560a62b75b9ef1a162321c32e97056348b9bd06a14101eb14e19358ae8423",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QuartzCronIncrementComponent } from './increment.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [QuartzCronIncrementComponent],\r\n  exports: [QuartzCronIncrementComponent]\r\n})\r\nexport class QuartzCronIncrementModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronMinuteModule",
            "id": "module-QuartzCronMinuteModule-e3fc5b7fde0a704d28fe4ad7ca65b7672389f65a63a847e1e2c54ebb5e3a047e539bbf1b687ba934ff02f5c8d0769988ec2192d433cd5d01deb4453193592ac9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { QuartzCronIncrementModule } from './../shared/increment';\r\nimport { QuartzCronMinuteComponent } from './minute.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    QuartzCronIncrementModule\r\n  ],\r\n  declarations: [QuartzCronMinuteComponent],\r\n  exports: [QuartzCronMinuteComponent]\r\n})\r\nexport class QuartzCronMinuteModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronModule",
            "id": "module-QuartzCronModule-80b4f4c5f7e105723ccd3f5633b5f73ab5d97497a293d8549527c8fd521fd48747d5ced6281390ac1f9a35d2a0dc7c46da7807939ecdb7d448f886b9fbfa1771",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/quartz.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronContainerModule } from './../container';\r\nimport { QuartzCronMinuteModule } from './tabs/minute';\r\nimport { QuartzCronMonthModule } from './tabs/month';\r\nimport { QuartzCronHourModule } from './tabs/hour';\r\nimport { QuartzCronSecondModule } from './tabs/second';\r\nimport { QuartzCronYearModule } from './tabs/year';\r\nimport { QuartzCronDayModule } from './tabs/day';\r\n\r\nimport { QuartzCronComponent } from './quartz.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    QuartzCronMonthModule,\r\n    QuartzCronMinuteModule,\r\n    QuartzCronHourModule,\r\n    QuartzCronSecondModule,\r\n    QuartzCronYearModule,\r\n    QuartzCronDayModule,\r\n    CronContainerModule\r\n  ],\r\n  declarations: [QuartzCronComponent],\r\n  exports: [QuartzCronComponent]\r\n})\r\nexport class QuartzCronModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "QuartzCronDayModule"
                        },
                        {
                            "name": "QuartzCronHourModule"
                        },
                        {
                            "name": "QuartzCronMinuteModule"
                        },
                        {
                            "name": "QuartzCronMonthModule"
                        },
                        {
                            "name": "QuartzCronSecondModule"
                        },
                        {
                            "name": "QuartzCronYearModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronMonthModule",
            "id": "module-QuartzCronMonthModule-e5cd1c771237e38ae42548278e3aacb283bae399d1dca6104898f09515001f16dae80f988f209adef83dd51dcc56ee0803f5daf961e3e980dda4f442dc388bf2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/month/month.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { QuartzCronIncrementModule } from './../shared/increment';\r\nimport { QuartzCronMonthComponent } from './month.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    QuartzCronIncrementModule\r\n  ],\r\n  declarations: [QuartzCronMonthComponent],\r\n  exports: [QuartzCronMonthComponent]\r\n})\r\nexport class QuartzCronMonthModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronSecondModule",
            "id": "module-QuartzCronSecondModule-a01675ca99117e139852e48575ec013aaeca40e2f10925d35553708a9a014f77009af7659c034e5256f3522956138a2ce0fc3865ea14ef6ccb27001a2a5d57bd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/second/second.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { QuartzCronIncrementModule } from './../shared/increment';\r\nimport { QuartzCronSecondComponent } from './second.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    QuartzCronIncrementModule\r\n  ],\r\n  declarations: [QuartzCronSecondComponent],\r\n  exports: [QuartzCronSecondComponent]\r\n})\r\nexport class QuartzCronSecondModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronSecondComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronSecondComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "QuartzCronYearModule",
            "id": "module-QuartzCronYearModule-6e2b8adac8c8ba08573f8e887ba06576193fda73de3bf2021a3cb50573ec1130738e8f66a09c598c2d8d260be4b1ffd83328011ad56dd769ad4fc5ea7ffd369e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/quartz/tabs/year/year.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { QuartzCronIncrementModule } from './../shared/increment';\r\nimport { QuartzCronYearComponent } from './year.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    QuartzCronIncrementModule\r\n  ],\r\n  declarations: [QuartzCronYearComponent],\r\n  exports: [QuartzCronYearComponent]\r\n})\r\nexport class QuartzCronYearModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "QuartzCronYearComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "QuartzCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "QuartzCronYearComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronDayModule",
            "id": "module-UnixCronDayModule-dff65848bbd9f68ffe432d24e229de3543d250420aad21c80aecf697a1dc8e30e086f7a5adcd0e66864489324ddedd30eb3b01bbb42f55e35b6d6a9ba2772ccc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/day/day.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UnixCronDayComponent } from './day.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [UnixCronDayComponent],\r\n  exports: [UnixCronDayComponent]\r\n})\r\nexport class UnixCronDayModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronDayComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronHourModule",
            "id": "module-UnixCronHourModule-4f25636c1c4e068ac798212da9d0dba2aa26b758f5b8b4318acbd2c9900bc856a69c385c346c918110ae0f493199f6419c7412d80b258a2896391cc745bc20e4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/hour/hour.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { UnixCronIncrementModule } from './../shared/increment';\r\nimport { UnixCronHourComponent } from './hour.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    UnixCronIncrementModule\r\n  ],\r\n  declarations: [UnixCronHourComponent],\r\n  exports: [UnixCronHourComponent]\r\n})\r\nexport class UnixCronHourModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronHourComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronIncrementModule",
            "id": "module-UnixCronIncrementModule-6160f6878035d425934e17bd52320cc81bd1564f372e3ca0da781d3e5d33660337d716142f05a6fcabd7872ebe1addac45ebf510bb56fb8a8a6e28e1bf67b311",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UnixCronIncrementComponent } from './increment.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [UnixCronIncrementComponent],\r\n  exports: [UnixCronIncrementComponent]\r\n})\r\nexport class UnixCronIncrementModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronIncrementComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronMinuteModule",
            "id": "module-UnixCronMinuteModule-03a9e248405d8781fb1eafa6c4c831521f7fadf6d111f0b96535cb0660ed883fdf4bd288ff61f2607a3827eeba6ccaa9e4d2ca68e4ca547f1e7faccc4687c526",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/minute/minute.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { UnixCronIncrementModule } from './../shared/increment';\r\nimport { UnixCronMinuteComponent } from './minute.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    UnixCronIncrementModule\r\n  ],\r\n  declarations: [UnixCronMinuteComponent],\r\n  exports: [UnixCronMinuteComponent]\r\n})\r\nexport class UnixCronMinuteModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronMinuteComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronModule",
            "id": "module-UnixCronModule-b9594b5b2803e42039a53d8ed8a83a0dc9b0d4f6dd89b2b482c83a150b4745b58a2a0039b3dce24e8ceff47c12bb17b485cab6cd652f7e12f8ab5108a70ecc19",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/unix.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronContainerModule } from './../container';\r\nimport { UnixCronMinuteModule } from './tabs/minute';\r\nimport { UnixCronMonthModule } from './tabs/month';\r\nimport { UnixCronHourModule } from './tabs/hour';\r\nimport { UnixCronDayModule } from './tabs/day';\r\n\r\nimport { UnixCronComponent } from './unix.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UnixCronMinuteModule,\r\n    UnixCronMonthModule,\r\n    UnixCronHourModule,\r\n    UnixCronDayModule,\r\n    CronContainerModule\r\n  ],\r\n  declarations: [UnixCronComponent],\r\n  exports: [UnixCronComponent]\r\n})\r\nexport class UnixCronModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronContainerModule"
                        },
                        {
                            "name": "UnixCronDayModule"
                        },
                        {
                            "name": "UnixCronHourModule"
                        },
                        {
                            "name": "UnixCronMinuteModule"
                        },
                        {
                            "name": "UnixCronMonthModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UnixCronMonthModule",
            "id": "module-UnixCronMonthModule-323bd0934e008b0c49ece23e6fa7e3445d532621bbba1e6d423bd90e08a0bbce8716a1e123ba31e8f1bd83f77dd3c6dd960b10cb357a5f34ef721fdc74a77413",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ng-cron/src/lib/unix/tabs/month/month.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CronAndModule, CronRangeModule, CronEveryModule } from './../../../shared';\r\nimport { UnixCronIncrementModule } from './../shared/increment';\r\nimport { UnixCronMonthComponent } from './month.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CronEveryModule,\r\n    CronRangeModule,\r\n    CronAndModule,\r\n    UnixCronIncrementModule\r\n  ],\r\n  declarations: [UnixCronMonthComponent],\r\n  exports: [UnixCronMonthComponent]\r\n})\r\nexport class UnixCronMonthModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UnixCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CronAndModule"
                        },
                        {
                            "name": "CronEveryModule"
                        },
                        {
                            "name": "CronRangeModule"
                        },
                        {
                            "name": "UnixCronIncrementModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "UnixCronMonthComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "cronBootstrap4",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/styles/bootstrap4.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CronClassesSchema",
                "defaultValue": "{\r\n  tabs: {\r\n    root: 'nav nav-tabs mb-2',\r\n    item: 'nav-item',\r\n    link: 'nav-link',\r\n    active: 'active'\r\n  },\r\n  formInline: 'form-inline',\r\n  formGroup: 'form-group',\r\n  formControl: 'form-control form-control-sm',\r\n  check: {\r\n    root: 'form-check',\r\n    field: 'form-check-input',\r\n    label: 'form-check-label',\r\n    row: 'row pl-3 pt-1'\r\n  },\r\n\r\n  mx1: 'mx-1',\r\n  ml1: 'ml-1',\r\n  col2: 'col-2',\r\n  col3: 'col-3',\r\n  colMd1: 'col-md-1',\r\n  colMd2: 'col-md-2'\r\n}"
            },
            {
                "name": "cronBootstrap5",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/styles/bootstrap5.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CronClassesSchema",
                "defaultValue": "{\r\n  tabs: {\r\n    root: 'nav nav-tabs mb-2',\r\n    item: 'nav-item',\r\n    link: 'nav-link',\r\n    active: 'active'\r\n  },\r\n  formInline: 'align-items-center d-flex',\r\n  formGroup: 'mb-3',\r\n  formControl: 'form-control form-control-sm w-auto',\r\n  check: {\r\n    root: 'form-check',\r\n    field: 'form-check-input',\r\n    label: 'form-check-label',\r\n    row: 'row ps-3 pt-1'\r\n  },\r\n\r\n  mx1: 'mx-1',\r\n  ml1: 'ms-1',\r\n  col2: 'col-2',\r\n  col3: 'col-3',\r\n  colMd1: 'col-md-1',\r\n  colMd2: 'col-md-2'\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template"
            },
            {
                "name": "generateClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(classes: string, cssClassPrefix?: string) => {\r\n  return classes\r\n    .split(' ')\r\n    .map(c => `${cssClassPrefix || ''}${c}`)\r\n    .join(' ');\r\n}"
            },
            {
                "name": "generateSchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(schema: CronClassesSchema, cssClassPrefix?: string): CronClassesSchema => {\r\n  const { tabs, formInline, formGroup, formControl, mx1, ml1, col2, col3, colMd1, colMd2, check } = schema;\r\n\r\n  return {\r\n    tabs: {\r\n      root: generateClasses(tabs.root, cssClassPrefix),\r\n      item: generateClasses(tabs.item, cssClassPrefix),\r\n      link: generateClasses(tabs.link, cssClassPrefix),\r\n      active: generateClasses(tabs.active, cssClassPrefix)\r\n    },\r\n    formInline: generateClasses(formInline, cssClassPrefix),\r\n    formGroup: generateClasses(formGroup, cssClassPrefix),\r\n    formControl: generateClasses(formControl, cssClassPrefix),\r\n\r\n    mx1: generateClasses(mx1, cssClassPrefix),\r\n    ml1: generateClasses(ml1, cssClassPrefix),\r\n    col2: generateClasses(col2, cssClassPrefix),\r\n    col3: generateClasses(col3, cssClassPrefix),\r\n    colMd1: generateClasses(colMd1, cssClassPrefix),\r\n    colMd2: generateClasses(colMd2, cssClassPrefix),\r\n\r\n    check: {\r\n      root: generateClasses(check.root, cssClassPrefix),\r\n      field: generateClasses(check.field, cssClassPrefix),\r\n      label: generateClasses(check.label, cssClassPrefix),\r\n      row: generateClasses(check.row, cssClassPrefix)\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "localization",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  common: {\r\n    month: {\r\n      january: 'January',\r\n      february: 'February',\r\n      march: 'March',\r\n      april: 'April',\r\n      may: 'May',\r\n      june: 'June',\r\n      july: 'July',\r\n      august: 'August',\r\n      september: 'September',\r\n      october: 'October',\r\n      november: 'November',\r\n      december: 'December'\r\n    },\r\n    dayOfWeek: {\r\n      sunday: 'Sunday',\r\n      monday: 'Monday',\r\n      tuesday: 'Tuesday',\r\n      wednesday: 'Wednesday',\r\n      thursday: 'Thursday',\r\n      friday: 'Friday',\r\n      saturday: 'Saturday'\r\n    },\r\n    dayOfMonth: {\r\n      '1st': '1st',\r\n      '2nd': '2nd',\r\n      '3rd': '3rd',\r\n      '4th': '4th',\r\n      '5th': '5th',\r\n      '6th': '6th',\r\n      '7th': '7th',\r\n      '8th': '8th',\r\n      '9th': '9th',\r\n      '10th': '10th',\r\n      '11th': '11th',\r\n      '12th': '12th',\r\n      '13th': '13th',\r\n      '14th': '14th',\r\n      '15th': '15th',\r\n      '16th': '16th',\r\n      '17th': '17th',\r\n      '18th': '18th',\r\n      '19th': '19th',\r\n      '20th': '20th',\r\n      '21st': '21st',\r\n      '22nd': '22nd',\r\n      '23rd': '23rd',\r\n      '24th': '24th',\r\n      '25th': '25th',\r\n      '26th': '26th',\r\n      '27th': '27th',\r\n      '28th': '28th',\r\n      '29th': '29th',\r\n      '30th': '30th',\r\n      '31st': '31st'\r\n    }\r\n  },\r\n  tabs: {\r\n    seconds: 'Seconds',\r\n    minutes: 'Minutes',\r\n    hours: 'Hours',\r\n    day: 'Day',\r\n    month: 'Month',\r\n    year: 'Year'\r\n  },\r\n  quartz: {\r\n    day: {\r\n      every: {\r\n        label: 'Every day'\r\n      },\r\n      dayOfWeekIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) starting on'\r\n      },\r\n      dayOfMonthIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) starting on the',\r\n        label3: 'of the month'\r\n      },\r\n      dayOfWeekAnd: {\r\n        label: 'Specific day of week (choose one or many)'\r\n      },\r\n      dayOfWeekRange: {\r\n        label1: 'Every day between',\r\n        label2: 'and'\r\n      },\r\n      dayOfMonthAnd: {\r\n        label: 'Specific day of month (choose one or many)'\r\n      },\r\n      dayOfMonthLastDay: {\r\n        label: 'On the last day of the month'\r\n      },\r\n      dayOfMonthLastDayWeek: {\r\n        label: 'On the last weekday of the month'\r\n      },\r\n      dayOfWeekLastNTHDayWeek: {\r\n        label1: 'On the last',\r\n        label2: 'of the month'\r\n      },\r\n      dayOfMonthDaysBeforeEndMonth: {\r\n        label: 'day(s) before the end of the month'\r\n      },\r\n      dayOfMonthNearestWeekDayOfMonth: {\r\n        label1: 'Nearest weekday (Monday to Friday) to the',\r\n        label2: 'of the month'\r\n      },\r\n      dayOfWeekNTHWeekDayOfMonth: {\r\n        label1: 'On the',\r\n        label2: 'of the month'\r\n      }\r\n    },\r\n    month: {\r\n      every: {\r\n        label: 'Every month'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'month(s) starting at month',\r\n      },\r\n      and: {\r\n        label: 'Specific month (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every month between month',\r\n        label2: 'and month'\r\n      }\r\n    },\r\n    second: {\r\n      every: {\r\n        label: 'Every second'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'second(s) starting at second',\r\n      },\r\n      and: {\r\n        label: 'Specific second (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every second between second',\r\n        label2: 'and second'\r\n      }\r\n    },\r\n    minute: {\r\n      every: {\r\n        label: 'Every minute'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'minute(s) starting at minute',\r\n      },\r\n      and: {\r\n        label: 'Specific minute (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every minute between minute',\r\n        label2: 'and minute'\r\n      }\r\n    },\r\n    hour: {\r\n      every: {\r\n        label: 'Every hour'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'hour(s) starting at hour',\r\n      },\r\n      and: {\r\n        label: 'Specific hour (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every hour between hour',\r\n        label2: 'and hour'\r\n      }\r\n    },\r\n    year: {\r\n      every: {\r\n        label: 'Any year'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'year(s) starting at year',\r\n      },\r\n      and: {\r\n        label: 'Specific year (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every year between year',\r\n        label2: 'and year'\r\n      }\r\n    }\r\n  },\r\n  unix: {\r\n    day: {\r\n      every: {\r\n        label: 'Every day'\r\n      },\r\n      dayOfWeekIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) of week'\r\n      },\r\n      dayOfMonthIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) of month'\r\n      },\r\n      dayOfWeekAnd: {\r\n        label: 'Specific day of week (choose one or many)'\r\n      },\r\n      dayOfMonthAnd: {\r\n        label: 'Specific day of month (choose one or many)'\r\n      }\r\n    },\r\n    month: {\r\n      every: {\r\n        label: 'Every month'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'month(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific month (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every month between month',\r\n        label2: 'and month'\r\n      }\r\n    },\r\n    minute: {\r\n      every: {\r\n        label: 'Every minute'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'minute(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific minute (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every minute between minute',\r\n        label2: 'and minute'\r\n      }\r\n    },\r\n    hour: {\r\n      every: {\r\n        label: 'Every hour'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'hour(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific hour (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every hour between hour',\r\n        label2: 'and hour'\r\n      }\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Bs4QuartzCronComponent>",
                "defaultValue": "{\r\n  title: 'Bootstrap4 - Quartz Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        QuartzCronModule\r\n      ],\r\n      declarations: [Bs4QuartzCronComponent]\r\n    })\r\n  ],\r\n  component: Bs4QuartzCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Bs4UnixCronComponent>",
                "defaultValue": "{\r\n  title: 'Bootstrap4 - Unix Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        UnixCronModule\r\n      ],\r\n      declarations: [Bs4UnixCronComponent]\r\n    })\r\n  ],\r\n  component: Bs4UnixCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Bs5QuartzCronComponent>",
                "defaultValue": "{\r\n  title: 'Bootstrap5 - Quartz Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        Bs5QuartzCronModule\r\n      ],\r\n      declarations: [Bs5QuartzCronComponent]\r\n    })\r\n  ],\r\n  component: Bs5QuartzCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Bs5UnixCronComponent>",
                "defaultValue": "{\r\n  title: 'Bootstrap5 - Unix Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        Bs5UnixCronModule\r\n      ],\r\n      declarations: [Bs5UnixCronComponent]\r\n    })\r\n  ],\r\n  component: Bs5UnixCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ng-cron/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<Bs4QuartzCronComponent>",
                "defaultValue": "{\r\n  args: {\r\n    value: '2,0,4,3,1 0/1 3/2 ? * 4/5 *',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs4-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<Bs4UnixCronComponent>",
                "defaultValue": "{\r\n  args: {\r\n    value: '0,1,2 */8 ? JAN,FEB */4',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-quartz-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<Bs5QuartzCronComponent>",
                "defaultValue": "{\r\n  args: {\r\n    value: '2,0,4,3,1 0/1 3/2 ? * 4/5 *',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/bs5-unix-cron.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<Bs5UnixCronComponent>",
                "defaultValue": "{\r\n  args: {\r\n    value: '0,1,2 */8 ? JAN,FEB */4',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
            }
        ],
        "functions": [
            {
                "name": "bs5QuartzCronServiceFactory",
                "file": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "bs5UnixCronServiceFactory",
                "file": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "quartzCronServiceFactory",
                "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "unixCronServiceFactory",
                "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "CronClassesSchema",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/ng-cron/src/lib/styles/classes-schema.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "CronLocalization",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DeepPartial<>",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "CronSingleType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Type.HOURS | Type.MINUTES | Type.MONTH | Type.SECONDS | Type.YEAR",
                "file": "projects/ng-cron/src/lib/cron-single-tab.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "DeepPartial",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            },
            {
                "name": "FullCronLocalization",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/ng-cron/src/lib/cron-localization.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "RawObject",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "DeepPartial<literal type>",
                "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ng-cron/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/ng-cron/src/lib/styles/bootstrap4.ts": [
                {
                    "name": "cronBootstrap4",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/styles/bootstrap4.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "defaultValue": "{\r\n  tabs: {\r\n    root: 'nav nav-tabs mb-2',\r\n    item: 'nav-item',\r\n    link: 'nav-link',\r\n    active: 'active'\r\n  },\r\n  formInline: 'form-inline',\r\n  formGroup: 'form-group',\r\n  formControl: 'form-control form-control-sm',\r\n  check: {\r\n    root: 'form-check',\r\n    field: 'form-check-input',\r\n    label: 'form-check-label',\r\n    row: 'row pl-3 pt-1'\r\n  },\r\n\r\n  mx1: 'mx-1',\r\n  ml1: 'ml-1',\r\n  col2: 'col-2',\r\n  col3: 'col-3',\r\n  colMd1: 'col-md-1',\r\n  colMd2: 'col-md-2'\r\n}"
                }
            ],
            "projects/ng-cron/src/lib/styles/bootstrap5.ts": [
                {
                    "name": "cronBootstrap5",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/styles/bootstrap5.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CronClassesSchema",
                    "defaultValue": "{\r\n  tabs: {\r\n    root: 'nav nav-tabs mb-2',\r\n    item: 'nav-item',\r\n    link: 'nav-link',\r\n    active: 'active'\r\n  },\r\n  formInline: 'align-items-center d-flex',\r\n  formGroup: 'mb-3',\r\n  formControl: 'form-control form-control-sm w-auto',\r\n  check: {\r\n    root: 'form-check',\r\n    field: 'form-check-input',\r\n    label: 'form-check-label',\r\n    row: 'row ps-3 pt-1'\r\n  },\r\n\r\n  mx1: 'mx-1',\r\n  ml1: 'ms-1',\r\n  col2: 'col-2',\r\n  col3: 'col-3',\r\n  colMd1: 'col-md-1',\r\n  colMd2: 'col-md-2'\r\n}"
                }
            ],
            "stories/bs4-quartz-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Bs4QuartzCronComponent>",
                    "defaultValue": "{\r\n  title: 'Bootstrap4 - Quartz Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        QuartzCronModule\r\n      ],\r\n      declarations: [Bs4QuartzCronComponent]\r\n    })\r\n  ],\r\n  component: Bs4QuartzCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<Bs4QuartzCronComponent>",
                    "defaultValue": "{\r\n  args: {\r\n    value: '2,0,4,3,1 0/1 3/2 ? * 4/5 *',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
                }
            ],
            "stories/bs4-unix-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Bs4UnixCronComponent>",
                    "defaultValue": "{\r\n  title: 'Bootstrap4 - Unix Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        UnixCronModule\r\n      ],\r\n      declarations: [Bs4UnixCronComponent]\r\n    })\r\n  ],\r\n  component: Bs4UnixCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs4-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<Bs4UnixCronComponent>",
                    "defaultValue": "{\r\n  args: {\r\n    value: '0,1,2 */8 ? JAN,FEB */4',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
                }
            ],
            "stories/bs5-quartz-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Bs5QuartzCronComponent>",
                    "defaultValue": "{\r\n  title: 'Bootstrap5 - Quartz Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        Bs5QuartzCronModule\r\n      ],\r\n      declarations: [Bs5QuartzCronComponent]\r\n    })\r\n  ],\r\n  component: Bs5QuartzCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-quartz-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<Bs5QuartzCronComponent>",
                    "defaultValue": "{\r\n  args: {\r\n    value: '2,0,4,3,1 0/1 3/2 ? * 4/5 *',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
                }
            ],
            "stories/bs5-unix-cron.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Bs5UnixCronComponent>",
                    "defaultValue": "{\r\n  title: 'Bootstrap5 - Unix Cron',\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        Bs5UnixCronModule\r\n      ],\r\n      declarations: [Bs5UnixCronComponent]\r\n    })\r\n  ],\r\n  component: Bs5UnixCronComponent,\r\n  argTypes: {\r\n    tabs: {\r\n      control: 'inline-check',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    activeTab: {\r\n      control: 'inline-radio',\r\n      options: [\r\n        Tab.SECONDS,\r\n        Tab.MINUTES,\r\n        Tab.HOURS,\r\n        Tab.MONTH,\r\n        Tab.DAY,\r\n        Tab.YEAR\r\n      ]\r\n    },\r\n    disabled: {\r\n      control: 'boolean'\r\n    },\r\n    hideTabs: {\r\n      control: 'boolean'\r\n    },\r\n    cssClassPrefix: {\r\n      control: 'text'\r\n    },\r\n    localization: {\r\n      control: 'object'\r\n    },\r\n  }\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/bs5-unix-cron.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<Bs5UnixCronComponent>",
                    "defaultValue": "{\r\n  args: {\r\n    value: '0,1,2 */8 ? JAN,FEB */4',\r\n    changed: action('changed'),\r\n    tabChanged: action('tabChanged')\r\n  }\r\n}"
                }
            ],
            "projects/ng-cron/src/lib/styles/generate-schema.ts": [
                {
                    "name": "generateClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(classes: string, cssClassPrefix?: string) => {\r\n  return classes\r\n    .split(' ')\r\n    .map(c => `${cssClassPrefix || ''}${c}`)\r\n    .join(' ');\r\n}"
                },
                {
                    "name": "generateSchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(schema: CronClassesSchema, cssClassPrefix?: string): CronClassesSchema => {\r\n  const { tabs, formInline, formGroup, formControl, mx1, ml1, col2, col3, colMd1, colMd2, check } = schema;\r\n\r\n  return {\r\n    tabs: {\r\n      root: generateClasses(tabs.root, cssClassPrefix),\r\n      item: generateClasses(tabs.item, cssClassPrefix),\r\n      link: generateClasses(tabs.link, cssClassPrefix),\r\n      active: generateClasses(tabs.active, cssClassPrefix)\r\n    },\r\n    formInline: generateClasses(formInline, cssClassPrefix),\r\n    formGroup: generateClasses(formGroup, cssClassPrefix),\r\n    formControl: generateClasses(formControl, cssClassPrefix),\r\n\r\n    mx1: generateClasses(mx1, cssClassPrefix),\r\n    ml1: generateClasses(ml1, cssClassPrefix),\r\n    col2: generateClasses(col2, cssClassPrefix),\r\n    col3: generateClasses(col3, cssClassPrefix),\r\n    colMd1: generateClasses(colMd1, cssClassPrefix),\r\n    colMd2: generateClasses(colMd2, cssClassPrefix),\r\n\r\n    check: {\r\n      root: generateClasses(check.root, cssClassPrefix),\r\n      field: generateClasses(check.field, cssClassPrefix),\r\n      label: generateClasses(check.label, cssClassPrefix),\r\n      row: generateClasses(check.row, cssClassPrefix)\r\n    }\r\n  }\r\n}"
                }
            ],
            "projects/ng-cron/src/lib/cron-localization.ts": [
                {
                    "name": "localization",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  common: {\r\n    month: {\r\n      january: 'January',\r\n      february: 'February',\r\n      march: 'March',\r\n      april: 'April',\r\n      may: 'May',\r\n      june: 'June',\r\n      july: 'July',\r\n      august: 'August',\r\n      september: 'September',\r\n      october: 'October',\r\n      november: 'November',\r\n      december: 'December'\r\n    },\r\n    dayOfWeek: {\r\n      sunday: 'Sunday',\r\n      monday: 'Monday',\r\n      tuesday: 'Tuesday',\r\n      wednesday: 'Wednesday',\r\n      thursday: 'Thursday',\r\n      friday: 'Friday',\r\n      saturday: 'Saturday'\r\n    },\r\n    dayOfMonth: {\r\n      '1st': '1st',\r\n      '2nd': '2nd',\r\n      '3rd': '3rd',\r\n      '4th': '4th',\r\n      '5th': '5th',\r\n      '6th': '6th',\r\n      '7th': '7th',\r\n      '8th': '8th',\r\n      '9th': '9th',\r\n      '10th': '10th',\r\n      '11th': '11th',\r\n      '12th': '12th',\r\n      '13th': '13th',\r\n      '14th': '14th',\r\n      '15th': '15th',\r\n      '16th': '16th',\r\n      '17th': '17th',\r\n      '18th': '18th',\r\n      '19th': '19th',\r\n      '20th': '20th',\r\n      '21st': '21st',\r\n      '22nd': '22nd',\r\n      '23rd': '23rd',\r\n      '24th': '24th',\r\n      '25th': '25th',\r\n      '26th': '26th',\r\n      '27th': '27th',\r\n      '28th': '28th',\r\n      '29th': '29th',\r\n      '30th': '30th',\r\n      '31st': '31st'\r\n    }\r\n  },\r\n  tabs: {\r\n    seconds: 'Seconds',\r\n    minutes: 'Minutes',\r\n    hours: 'Hours',\r\n    day: 'Day',\r\n    month: 'Month',\r\n    year: 'Year'\r\n  },\r\n  quartz: {\r\n    day: {\r\n      every: {\r\n        label: 'Every day'\r\n      },\r\n      dayOfWeekIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) starting on'\r\n      },\r\n      dayOfMonthIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) starting on the',\r\n        label3: 'of the month'\r\n      },\r\n      dayOfWeekAnd: {\r\n        label: 'Specific day of week (choose one or many)'\r\n      },\r\n      dayOfWeekRange: {\r\n        label1: 'Every day between',\r\n        label2: 'and'\r\n      },\r\n      dayOfMonthAnd: {\r\n        label: 'Specific day of month (choose one or many)'\r\n      },\r\n      dayOfMonthLastDay: {\r\n        label: 'On the last day of the month'\r\n      },\r\n      dayOfMonthLastDayWeek: {\r\n        label: 'On the last weekday of the month'\r\n      },\r\n      dayOfWeekLastNTHDayWeek: {\r\n        label1: 'On the last',\r\n        label2: 'of the month'\r\n      },\r\n      dayOfMonthDaysBeforeEndMonth: {\r\n        label: 'day(s) before the end of the month'\r\n      },\r\n      dayOfMonthNearestWeekDayOfMonth: {\r\n        label1: 'Nearest weekday (Monday to Friday) to the',\r\n        label2: 'of the month'\r\n      },\r\n      dayOfWeekNTHWeekDayOfMonth: {\r\n        label1: 'On the',\r\n        label2: 'of the month'\r\n      }\r\n    },\r\n    month: {\r\n      every: {\r\n        label: 'Every month'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'month(s) starting at month',\r\n      },\r\n      and: {\r\n        label: 'Specific month (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every month between month',\r\n        label2: 'and month'\r\n      }\r\n    },\r\n    second: {\r\n      every: {\r\n        label: 'Every second'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'second(s) starting at second',\r\n      },\r\n      and: {\r\n        label: 'Specific second (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every second between second',\r\n        label2: 'and second'\r\n      }\r\n    },\r\n    minute: {\r\n      every: {\r\n        label: 'Every minute'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'minute(s) starting at minute',\r\n      },\r\n      and: {\r\n        label: 'Specific minute (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every minute between minute',\r\n        label2: 'and minute'\r\n      }\r\n    },\r\n    hour: {\r\n      every: {\r\n        label: 'Every hour'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'hour(s) starting at hour',\r\n      },\r\n      and: {\r\n        label: 'Specific hour (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every hour between hour',\r\n        label2: 'and hour'\r\n      }\r\n    },\r\n    year: {\r\n      every: {\r\n        label: 'Any year'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'year(s) starting at year',\r\n      },\r\n      and: {\r\n        label: 'Specific year (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every year between year',\r\n        label2: 'and year'\r\n      }\r\n    }\r\n  },\r\n  unix: {\r\n    day: {\r\n      every: {\r\n        label: 'Every day'\r\n      },\r\n      dayOfWeekIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) of week'\r\n      },\r\n      dayOfMonthIncrement: {\r\n        label1: 'Every',\r\n        label2: 'day(s) of month'\r\n      },\r\n      dayOfWeekAnd: {\r\n        label: 'Specific day of week (choose one or many)'\r\n      },\r\n      dayOfMonthAnd: {\r\n        label: 'Specific day of month (choose one or many)'\r\n      }\r\n    },\r\n    month: {\r\n      every: {\r\n        label: 'Every month'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'month(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific month (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every month between month',\r\n        label2: 'and month'\r\n      }\r\n    },\r\n    minute: {\r\n      every: {\r\n        label: 'Every minute'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'minute(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific minute (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every minute between minute',\r\n        label2: 'and minute'\r\n      }\r\n    },\r\n    hour: {\r\n      every: {\r\n        label: 'Every hour'\r\n      },\r\n      increment: {\r\n        label1: 'Every',\r\n        label2: 'hour(s)',\r\n      },\r\n      and: {\r\n        label: 'Specific hour (choose one or many)'\r\n      },\r\n      range: {\r\n        label1: 'Every hour between hour',\r\n        label2: 'and hour'\r\n      }\r\n    }\r\n  }\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts": [
                {
                    "name": "bs5QuartzCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts": [
                {
                    "name": "bs5UnixCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "projects/ng-cron/src/lib/quartz/quartz.component.ts": [
                {
                    "name": "quartzCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "projects/ng-cron/src/lib/unix/unix.component.ts": [
                {
                    "name": "unixCronServiceFactory",
                    "file": "projects/ng-cron/src/lib/unix/unix.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ng-cron/src/lib/styles/classes-schema.type.ts": [
                {
                    "name": "CronClassesSchema",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/ng-cron/src/lib/styles/classes-schema.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/ng-cron/src/lib/cron-localization.ts": [
                {
                    "name": "CronLocalization",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DeepPartial<>",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "DeepPartial",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                },
                {
                    "name": "FullCronLocalization",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/ng-cron/src/lib/cron-localization.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/ng-cron/src/lib/cron-single-tab.type.ts": [
                {
                    "name": "CronSingleType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Type.HOURS | Type.MINUTES | Type.MONTH | Type.SECONDS | Type.YEAR",
                    "file": "projects/ng-cron/src/lib/cron-single-tab.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "projects/ng-cron/src/lib/cron-host.abstract.ts": [
                {
                    "name": "RawObject",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "DeepPartial<literal type>",
                    "file": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs5QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/bs5-quartz/bs5-quartz.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "bs5QuartzCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs5UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/bs5-unix/bs5-unix.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "bs5UnixCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-host.abstract.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "RawObject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-localization.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-localization.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "CronLocalization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-localization.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "DeepPartial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-localization.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "FullCronLocalization",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-single-tab.type.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "CronSingleType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-tab-single-segment.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronTabSingleSegmentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/cron-tab.abstract.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CronTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/quartz.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "quartzCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/day/day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/35",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/hour/hour.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronHourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/minute/minute.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronMinuteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/month/month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/second/second.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronSecondComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/shared/increment/increment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronIncrementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/quartz/tabs/year/year.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuartzCronYearComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/and/and.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronAndComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/every/every.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronEveryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/shared/range/range.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CronRangeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/styles/bootstrap4.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cronBootstrap4",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/styles/bootstrap5.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cronBootstrap5",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/styles/classes-schema.type.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "CronClassesSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/styles/generate-schema.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/day/day.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronDayComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/hour/hour.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronHourComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/minute/minute.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronMinuteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/month/month.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronMonthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/tabs/shared/increment/increment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronIncrementComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/lib/unix/unix.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "unixCronServiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ng-cron/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-quartz-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs4QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-unix-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs4UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs4-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-quartz-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs5QuartzCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-quartz-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-unix-cron.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Bs5UnixCronComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/bs5-unix-cron.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}